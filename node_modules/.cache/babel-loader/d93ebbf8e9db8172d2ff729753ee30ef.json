{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/DevolucionProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon, Progress } from 'semantic-ui-react';\nimport Productselect from './ListaProductoDevolucion';\nimport { UserContext } from '../UseContext';\nimport { getListaProducto, updateProducto, setRegistro, setArchivo } from '../../../firebase';\n\nfunction DevolucionProducto() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        subiendoBandera = _useState2[0],\n        setsubiendoBandera = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        nameFile = _useState6[0],\n        setNameFile = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progreso = _useState8[0],\n        setProgreso = _useState8[1];\n\n  var url_subir = null;\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const fileInputRef = React.createRef();\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        productSelect = _useState10[0],\n        setProductSelect = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        productos = _useState12[0],\n        setProductos = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isShowingModal = _useState14[0],\n        setIsShowingModal = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isClose = _useState16[0],\n        setIsclose = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        encargado = _useState18[0],\n        setEncargado = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        descripcion = _useState20[0],\n        setDescripcion = _useState20[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaProducto(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const handleSubmit = evt => {\n    if (encargado !== \"\" && productSelect.length >= 1) {\n      setsubiendoBandera(true);\n\n      if (file !== null) {\n        setArchivo(file, nameFile, resp => {\n          url_subir = resp;\n        }, porcentaje => {\n          setProgreso(porcentaje);\n        }, bandera => {\n          if (bandera) {\n            productSelect.map(productos => {\n              let disponible = Number(productos.disponible) + Number(productos.cantidad);\n              console.log(disponible);\n              console.log(productos.ruta);\n              updateProducto(productos.ruta, disponible);\n            });\n            var lista = [];\n            productSelect.map(wea => {\n              lista.push({\n                marca: wea.marca,\n                modelo: wea.modelo,\n                cantidad: wea.cantidad\n              });\n            });\n            var fecha_date = new Date();\n            var ano = fecha_date.getFullYear();\n            let temp_subir = {\n              encargado: encargado,\n              peticion: \"Devolucion de producto\",\n              lista: lista,\n              fecha: Date.now(),\n              comentario: descripcion,\n              año: ano,\n              mes: fecha_date.getMonth(),\n              ruta_img: url_subir\n            };\n            setRegistro(temp_subir, resp => {\n              if (resp) {\n                window.location = '/registro';\n              }\n            });\n          }\n        });\n      } else {\n        productSelect.map(productos => {\n          let disponible = Number(productos.disponible) + Number(productos.cantidad);\n          console.log(disponible);\n          console.log(productos.ruta);\n          updateProducto(productos.ruta, disponible);\n        });\n        var lista = [];\n        productSelect.map(wea => {\n          lista.push({\n            marca: wea.marca,\n            modelo: wea.modelo,\n            cantidad: wea.cantidad\n          });\n        });\n        var fecha_date = new Date();\n        var ano = fecha_date.getFullYear();\n        let temp_subir = {\n          encargado: encargado,\n          peticion: \"Devolucion de producto\",\n          lista: lista,\n          fecha: Date.now(),\n          comentario: descripcion,\n          año: ano,\n          mes: fecha_date.getMonth(),\n          ruta_img: url_subir\n        };\n        setRegistro(temp_subir, resp => {\n          if (resp) {\n            window.location = '/registro';\n          }\n        });\n      }\n    } else {\n      alert(\"Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente\");\n    }\n  };\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Devolucion Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Marca\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Modelo\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Articulos Pendientes\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const stock = producto.stock,\n          marca = producto.marca,\n          modelo = producto.modelo,\n          codigo = producto.codigo,\n          disponible = producto.disponible,\n          key = producto.key;\n    let dev_stock = Number(stock) - Number(disponible);\n\n    if (dev_stock > 0) {\n      return React.createElement(Productselect, {\n        key: index,\n        marca: marca,\n        modelo: modelo,\n        disponible: disponible,\n        stock: dev_stock,\n        id: codigo,\n        ruta: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Ver Articulos\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Elementos seleccionados para devolver\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Marca\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Modelo\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Articulos Pendientes:\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Cantidad Entregada\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const marca = item.marca,\n          modelo = item.modelo,\n          stock = item.stock,\n          cantidad = item.cantidad;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, marca), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, modelo), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, stock), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, cantidad));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    name: \"encargado\",\n    placeholder: \"Encargado de Devolucion\",\n    onChange: e => setEncargado(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), progreso !== null && React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Progress, {\n    percent: progreso,\n    indicating: true,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle de la Devolucion\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), !subiendoBandera ? React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Agregar\") : React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))))));\n}\n\nexport default DevolucionProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/DevolucionProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","Input","TextArea","Card","Modal","Header","Table","Icon","Progress","Productselect","UserContext","getListaProducto","updateProducto","setRegistro","setArchivo","DevolucionProducto","subiendoBandera","setsubiendoBandera","file","setFile","nameFile","setNameFile","progreso","setProgreso","url_subir","getFile","e","target","files","name","fileInputRef","createRef","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","encargado","setEncargado","descripcion","setDescripcion","providerValue","response","console","error","handleSubmit","evt","length","resp","porcentaje","bandera","map","disponible","Number","cantidad","log","ruta","lista","wea","push","marca","modelo","fecha_date","Date","ano","getFullYear","temp_subir","peticion","fecha","now","comentario","año","mes","getMonth","ruta_img","window","location","alert","confirmarPedido","producto","index","stock","codigo","key","dev_stock","textAlign","item","value","current","click"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon, Progress } from 'semantic-ui-react';\nimport Productselect from './ListaProductoDevolucion'\nimport { UserContext } from '../UseContext';\nimport { getListaProducto, updateProducto, setRegistro, setArchivo } from '../../../firebase';\n\nfunction DevolucionProducto() {\n\n    const [subiendoBandera, setsubiendoBandera] = useState(false)\n\n\n    const [file, setFile] = useState(null);\n    const [nameFile, setNameFile] = useState(null);\n    const [progreso, setProgreso] = useState(null)\n\n    var url_subir = null;\n\n\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n\n    const fileInputRef = React.createRef();\n\n\n    const [productSelect, setProductSelect] = useState([]);\n\n    const [productos, setProductos] = useState([])\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n    const handleSubmit = (evt) => {\n        if (encargado !== \"\" && productSelect.length >= 1) {\n            setsubiendoBandera(true)\n            if (file !== null) {\n                setArchivo(file, nameFile, (resp) => {\n                    url_subir = resp\n                }, (porcentaje) => {\n                    setProgreso(porcentaje)\n                }, bandera => {\n                    if (bandera) {\n                        productSelect.map((productos) => {\n                            let disponible = Number(productos.disponible) + Number(productos.cantidad);\n                            console.log(disponible)\n                            console.log(productos.ruta)\n                            updateProducto(productos.ruta, disponible)\n                        })\n                        var lista = []\n                        productSelect.map((wea) => {\n                            lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n                        })\n                        var fecha_date = new Date();\n                        var ano = fecha_date.getFullYear();\n                        let temp_subir = { encargado: encargado, peticion: \"Devolucion de producto\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth(), ruta_img: url_subir }\n\n                        setRegistro(temp_subir, (resp) => {\n                            if (resp) {\n                                window.location = '/registro'\n                            }\n                        })\n                    }\n                })\n\n            }else{\n                productSelect.map((productos) => {\n                    let disponible = Number(productos.disponible) + Number(productos.cantidad);\n                    console.log(disponible)\n                    console.log(productos.ruta)\n                    updateProducto(productos.ruta, disponible)\n                })\n                var lista = []\n                productSelect.map((wea) => {\n                    lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n                })\n                var fecha_date = new Date();\n                var ano = fecha_date.getFullYear();\n                let temp_subir = { encargado: encargado, peticion: \"Devolucion de producto\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth(), ruta_img: url_subir }\n\n                setRegistro(temp_subir, (resp) => {\n                    if (resp) {\n                        window.location = '/registro'\n                    }\n                })\n            }\n        } else {\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }\n\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Devolucion Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Pendientes</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, modelo, codigo, disponible, key } = producto\n                                                            let dev_stock = Number(stock) - Number(disponible)\n                                                            if (dev_stock > 0) {\n                                                                return (\n                                                                    <Productselect key={index} marca={marca} modelo={modelo} disponible={disponible} stock={dev_stock} id={codigo} ruta={key} ></Productselect>\n                                                                )\n                                                            }\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para devolver</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Articulos Pendientes:</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Entregada</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { marca, modelo, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{marca}</Table.Cell>\n                                                                    <Table.Cell>{modelo}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Input fluid name=\"encargado\" placeholder=\"Encargado de Devolucion\" onChange={e => setEncargado(e.target.value)} />\n                        </Grid.Column>\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                        </Grid.Column>\n                        {\n                            progreso !== null &&\n                            <Grid.Column width={4} >\n                                <Progress percent={progreso} indicating size=\"medium\" />\n                            </Grid.Column>\n                        }\n                    </Grid>\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        {\n                            !subiendoBandera ?\n                                <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                                    Agregar\n                        </Button>\n                                :\n                                <Dimmer active inverted>\n                                    <Loader />\n                                </Dimmer>\n                        }\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default DevolucionProducto;"]},"metadata":{},"sourceType":"module"}