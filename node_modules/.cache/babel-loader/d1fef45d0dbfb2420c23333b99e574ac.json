{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/entrega/EntregaProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductSelect';\nimport { UserContext } from \"../UseContext\";\nimport { getListaAnalisis, setRegistro } from '../../../firebase';\n\nfunction EntregaProducto() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        productSelect = _useState2[0],\n        setProductSelect = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        productos = _useState4[0],\n        setProductos = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isShowingModal = _useState6[0],\n        setIsShowingModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isClose = _useState8[0],\n        setIsclose = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        encargado = _useState10[0],\n        setEncargado = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        descripcion = _useState12[0],\n        setDescripcion = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        file = _useState14[0],\n        setFile = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        nameFile = _useState16[0],\n        setNameFile = _useState16[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  const fileInputRef = React.createRef();\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaAnalisis(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  const handleSubmit = evt => {\n    if (encargado !== \"\" && productSelect.length > 1) {\n      let temp_subir = {\n        encargado: encargado,\n        peticion: \"Entrega de producto\",\n        archivo: \"archivo.qlio\",\n        lista: \"aun falta\",\n        fecha: Date.now(),\n        comentario: descripcion\n      };\n      setRegistro(temp_subir, resp => {\n        if (resp) {\n          window.location = '/registro';\n        }\n      });\n    } else {\n      alert(\"Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente\");\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Entrega de Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Marca \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Modelo \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Articulos Disponibles\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const disponible = producto.disponible,\n          marca = producto.marca,\n          modelo = producto.modelo,\n          codigo = producto.codigo;\n    return React.createElement(Productselect, {\n      key: index,\n      marca: marca,\n      modelo: modelo,\n      stock: disponible,\n      id: codigo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Ver Articulos\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Elementos seleccionados para entrega\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Producto\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Disponibilidad\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Cantidad Pedida\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const producto = item.producto,\n          stock = item.stock,\n          cantidad = item.cantidad;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, producto), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, stock), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, cantidad));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    name: \"encargado\",\n    placeholder: \"Encargado\",\n    onChange: e => setEncargado(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), nameFile))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Agregar\")))));\n}\n\nexport default EntregaProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/entrega/EntregaProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","Input","TextArea","Card","Modal","Header","Table","Icon","Productselect","UserContext","getListaAnalisis","setRegistro","EntregaProducto","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","encargado","setEncargado","descripcion","setDescripcion","file","setFile","nameFile","setNameFile","providerValue","fileInputRef","createRef","response","e","console","error","getFile","target","files","name","confirmarPedido","evt","length","handleSubmit","temp_subir","peticion","archivo","lista","fecha","Date","now","comentario","resp","window","location","alert","map","producto","index","disponible","marca","modelo","codigo","textAlign","item","stock","cantidad","value","current","click"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductSelect'\nimport { UserContext } from \"../UseContext\";\nimport { getListaAnalisis, setRegistro } from '../../../firebase';\n\nfunction EntregaProducto() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n    const fileInputRef = React.createRef();\n\n\n        useEffect(() => {\n            (async function () {\n                try {\n                    getListaAnalisis((response) => {\n                        setProductos(response);\n                    });\n                } catch (e) {\n                    console.error(e);\n                }\n            })();// eslint-disable-next-line\n        }, []);\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n\n        if (encargado !== \"\" && productSelect.length > 1) {\n            let temp_subir = { encargado: encargado, peticion: \"Entrega de producto\", archivo: \"archivo.qlio\", lista: \"aun falta\", fecha: Date.now(), comentario: descripcion }\n            setRegistro(temp_subir, (resp) => {\n                if (resp) {\n                    window.location = '/registro'\n                }\n            })\n        }else{\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }\n    }\n    \n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Entrega de Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca </Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Disponibles</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { disponible, marca, modelo, codigo } = producto\n                                                            return (\n                                                                <Productselect key={index} marca={marca} modelo={modelo} stock={disponible} id={codigo} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para entrega</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Producto</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Disponibilidad</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Pedida</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { producto, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{producto}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Input fluid name=\"encargado\" placeholder=\"Encargado\" onChange={e => setEncargado(e.target.value)} />\n                        </Grid.Column>\n\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                            {nameFile}\n                        </Grid.Column>\n                    </Grid>\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EntregaProducto;"]},"metadata":{},"sourceType":"module"}