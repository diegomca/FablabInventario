{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/actualizar/ActualizaStock.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductActualizar';\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, updateProductoStock, setRegistro, setArchivo } from '../../../firebase';\n\nfunction ActualizarStock() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        subiendoBandera = _useState2[0],\n        setsubiendoBandera = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        nameFile = _useState6[0],\n        setNameFile = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progreso = _useState8[0],\n        setProgreso = _useState8[1];\n\n  var url_subir = null;\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const fileInputRef = React.createRef();\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        productSelect = _useState10[0],\n        setProductSelect = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        productos = _useState12[0],\n        setProductos = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isShowingModal = _useState14[0],\n        setIsShowingModal = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isClose = _useState16[0],\n        setIsclose = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        descripcion = _useState18[0],\n        setDescripcion = _useState18[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaProducto(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  const handleSubmit = evt => {\n    if (productSelect.length >= 1) {\n      setsubiendoBandera(true);\n\n      if (file !== null) {\n        setArchivo(file, nameFile, resp => {\n          url_subir = resp;\n        }, porcentaje => {\n          setProgreso(porcentaje);\n        }, bandera => {\n          if (bandera) {\n            productSelect.map(productos => {\n              let new_stock = Number(productos.stock) + Number(productos.cantidad);\n              let new_disponible = Number(productos.disponible) + Number(productos.cantidad);\n              console.log(new_disponible);\n              console.log(new_stock);\n              updateProductoStock(new_stock, new_disponible, productos.ruta);\n            });\n            var lista = [];\n            productSelect.map(wea => {\n              lista.push({\n                marca: wea.marca,\n                modelo: wea.modelo,\n                cantidad: wea.cantidad,\n                stock: wea.stock\n              });\n            });\n            var fecha_date = new Date();\n            var ano = fecha_date.getFullYear();\n            let temp_subir = {\n              encargado: \"Administrador\",\n              peticion: \"Actualizar stock\",\n              lista: lista,\n              fecha: Date.now(),\n              comentario: descripcion,\n              año: ano,\n              mes: fecha_date.getMonth()\n            };\n            setRegistro(temp_subir, resp => {\n              if (resp) {\n                window.location = '/registro';\n              }\n            });\n          }\n        });\n      } else {\n        productSelect.map(productos => {\n          let new_stock = Number(productos.stock) + Number(productos.cantidad);\n          let new_disponible = Number(productos.disponible) + Number(productos.cantidad);\n          console.log(new_disponible);\n          console.log(new_stock);\n          updateProductoStock(new_stock, new_disponible, productos.ruta);\n        });\n        var lista = [];\n        productSelect.map(wea => {\n          lista.push({\n            marca: wea.marca,\n            modelo: wea.modelo,\n            cantidad: wea.cantidad,\n            stock: wea.stock\n          });\n        });\n        var fecha_date = new Date();\n        var ano = fecha_date.getFullYear();\n        let temp_subir = {\n          encargado: \"Administrador\",\n          peticion: \"Actualizar stock\",\n          lista: lista,\n          fecha: Date.now(),\n          comentario: descripcion,\n          año: ano,\n          mes: fecha_date.getMonth()\n        };\n        setRegistro(temp_subir, resp => {\n          if (resp) {\n            window.location = '/registro';\n          }\n        });\n      }\n    } else {\n      alert(\"Error en los datos, debe seleccionar productos obligatoriamente\");\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Actualizar Stock de Productos\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Producto  \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Articulos Disponibles\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const stock = producto.stock,\n          marca = producto.marca,\n          modelo = producto.modelo,\n          codigo = producto.codigo,\n          key = producto.key,\n          disponible = producto.disponible;\n    return React.createElement(Productselect, {\n      key: index,\n      marca: marca,\n      modelo: modelo,\n      stock: stock,\n      id: codigo,\n      ruta: key,\n      disponible: disponible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Ver articulos actualizados\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Elementos actualizados\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Producto\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Cantidad Anterior\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Cantidad Agregada\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Cantidad Total\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const producto = item.producto,\n          stock = item.stock,\n          cantidad = item.cantidad;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, producto), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, stock), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, cantidad), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, Number(stock) + Number(cantidad)));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })), progreso !== null && React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Progress, {\n    percent: progreso,\n    indicating: true,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle de la Devolucion\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), !subiendoBandera ? React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Agregar\") : React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }))))));\n}\n\nexport default ActualizarStock;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/actualizar/ActualizaStock.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","TextArea","Card","Table","Modal","Header","Icon","Productselect","UserContext","getListaProducto","updateProductoStock","setRegistro","setArchivo","ActualizarStock","subiendoBandera","setsubiendoBandera","file","setFile","nameFile","setNameFile","progreso","setProgreso","url_subir","getFile","e","target","files","name","fileInputRef","createRef","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","descripcion","setDescripcion","providerValue","response","console","error","confirmarPedido","evt","length","handleSubmit","resp","porcentaje","bandera","map","new_stock","Number","stock","cantidad","new_disponible","disponible","log","ruta","lista","wea","push","marca","modelo","fecha_date","Date","ano","getFullYear","temp_subir","encargado","peticion","fecha","now","comentario","año","mes","getMonth","window","location","alert","producto","index","codigo","key","textAlign","item","current","click","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductActualizar'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, updateProductoStock, setRegistro, setArchivo } from '../../../firebase';\n\nfunction ActualizarStock() {\n    const [subiendoBandera, setsubiendoBandera] = useState(false)\n\n\n    const [file, setFile] = useState(null);\n    const [nameFile, setNameFile] = useState(null);\n    const [progreso, setProgreso] = useState(null)\n\n    var url_subir = null;\n\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n\n    const fileInputRef = React.createRef();\n\n    const [productSelect, setProductSelect] = useState([]);\n\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [descripcion, setDescripcion] = useState(\"\");\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n\n\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n\n        if (productSelect.length >= 1) {\n            setsubiendoBandera(true)\n            if (file !== null) {\n\n                setArchivo(file, nameFile, (resp) => {\n                    url_subir = resp\n                }, (porcentaje) => {\n                    setProgreso(porcentaje)\n                }, bandera => {\n                    if (bandera) {\n                        productSelect.map((productos) => {\n                            let new_stock = Number(productos.stock) + Number(productos.cantidad)\n                            let new_disponible = Number(productos.disponible) + Number(productos.cantidad)\n                            console.log(new_disponible)\n                            console.log(new_stock)\n                            updateProductoStock(new_stock, new_disponible, productos.ruta)\n                        })\n                        var lista = []\n                        productSelect.map((wea) => {\n                            lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad, stock: wea.stock })\n                        })\n                        var fecha_date = new Date();\n                        var ano = fecha_date.getFullYear();\n                        let temp_subir = { encargado: \"Administrador\", peticion: \"Actualizar stock\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth() }\n\n                        setRegistro(temp_subir, (resp) => {\n                            if (resp) {\n                                window.location = '/registro'\n                            }\n                        })\n                    }\n                })\n\n            }else{\n                productSelect.map((productos) => {\n                    let new_stock = Number(productos.stock) + Number(productos.cantidad)\n                    let new_disponible = Number(productos.disponible) + Number(productos.cantidad)\n                    console.log(new_disponible)\n                    console.log(new_stock)\n                    updateProductoStock(new_stock, new_disponible, productos.ruta)\n                })\n                var lista = []\n                productSelect.map((wea) => {\n                    lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad, stock: wea.stock })\n                })\n                var fecha_date = new Date();\n                var ano = fecha_date.getFullYear();\n                let temp_subir = { encargado: \"Administrador\", peticion: \"Actualizar stock\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth() }\n\n                setRegistro(temp_subir, (resp) => {\n                    if (resp) {\n                        window.location = '/registro'\n                    }\n                })\n            }\n        } else {\n            alert(`Error en los datos, debe seleccionar productos obligatoriamente`)\n        }\n    }\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Actualizar Stock de Productos</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Producto  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Disponibles</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, modelo, codigo, key, disponible } = producto\n                                                            return (\n                                                                <Productselect key={index} marca={marca} modelo={modelo} stock={stock} id={codigo} ruta={key} disponible={disponible} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver articulos actualizados</Button>} >\n                                        <Modal.Header>Elementos actualizados</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Producto</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Anterior</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Agregada</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Total</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { producto, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{producto}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{Number(stock) + Number(cantidad)}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n                        <Grid.Column width={1} >\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                        </Grid.Column>\n                        {\n                            progreso !== null &&\n                            <Grid.Column width={4} >\n                                <Progress percent={progreso} indicating size=\"medium\" />\n                            </Grid.Column>\n                        }\n\n                    </Grid>\n\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        {\n                            !subiendoBandera ?\n                                <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                                    Agregar\n                        </Button>\n                                :\n                                <Dimmer active inverted>\n                                    <Loader />\n                                </Dimmer>\n                        }\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default ActualizarStock;"]},"metadata":{},"sourceType":"module"}