{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventario/src/login/Login.jsx\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport Barrasuperior from './Barrasuperior';\nimport BackgroundSlider from 'react-background-slider';\nimport image1 from '../img/login/slide-img-1.jpg';\nimport image2 from '../img/login/slide-img-2.jpg';\nimport image3 from '../img/login/slide-img-3.png';\nimport './Login.css'; //import { Redirect } from 'react-router-dom'\n\nimport './Login.css';\nimport { userService } from './logica/_services';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    userService.logout();\n    this.state = {\n      username: '',\n      password: '',\n      submitted: false,\n      loading: false,\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          returnUrl = _this$state.returnUrl; // stop here if form is invalid\n\n    if (!(username && password)) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    userService.login(username, password).then(user => {\n      const _ref = this.props.location.state || {\n        from: {\n          pathname: \"/\"\n        }\n      },\n            from = _ref.from;\n\n      this.props.history.push(from);\n    }, error => this.setState({\n      error,\n      loading: false\n    }));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password,\n          submitted = _this$state2.submitted,\n          loading = _this$state2.loading,\n          error = _this$state2.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Barrasuperior, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(BackgroundSlider, {\n      images: [image2, image1, image3],\n      duration: 5,\n      transition: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Ingreso a Fablab Inventario\"), React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !username ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), submitted && !username && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Username is required\")), React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !password ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Contrase\\xF1a\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), submitted && !password && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Password is required\")), React.createElement(Button, {\n      color: \"instagram\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Ingresar\"), error && React.createElement(\"div\", {\n      className: 'alert alert-danger',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, error)))))));\n  }\n\n}\n\nexport default {\n  Login\n};","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventario/src/login/Login.jsx"],"names":["React","Button","Form","Grid","Header","Segment","Barrasuperior","BackgroundSlider","image1","image2","image3","userService","Login","Component","constructor","props","logout","state","username","password","submitted","loading","error","handleChange","bind","handleSubmit","e","target","name","value","setState","preventDefault","returnUrl","login","then","user","location","from","pathname","history","push","render","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport Barrasuperior from './Barrasuperior'\nimport BackgroundSlider from 'react-background-slider'\nimport image1 from '../img/login/slide-img-1.jpg'\nimport image2 from '../img/login/slide-img-2.jpg'\nimport image3 from '../img/login/slide-img-3.png'\nimport './Login.css'\n//import { Redirect } from 'react-router-dom'\nimport './Login.css';\nimport { userService } from './logica/_services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        userService.logout();\n\n        this.state = {\n            username: '',\n            password: '',\n            submitted: false,\n            loading: false,\n            error: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({ submitted: true });\n        const { username, password, returnUrl } = this.state;\n\n        // stop here if form is invalid\n        if (!(username && password)) {\n            return;\n        }\n\n        this.setState({ loading: true });\n        userService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => this.setState({ error, loading: false })\n            );\n    }\n\n    render() {\n        const { username, password, submitted, loading, error } = this.state;\n        return (\n            <div>\n                <Barrasuperior />\n                <div className=\"Login\">\n                    <BackgroundSlider images={[image2, image1, image3]}\n                        duration={5} transition={2} />\n                    <Grid textAlign=\"center\" verticalAlign=\"middle\">\n                        <Grid.Column style={{ maxWidth: 400 }}>\n                            <Segment>\n                                <Header as=\"h2\" textAlign=\"center\">\n                                    Ingreso a Fablab Inventario\n                        </Header>\n                                <Form size=\"large\" onSubmit={this.handleSubmit} >\n                                    <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\n                                    <Form.Input\n                                        fluid\n                                        icon=\"user\"\n                                        iconPosition=\"left\"\n                                        placeholder=\"Usuario\"\n                                    />\n                                        {submitted && !username &&\n                                            <div className=\"help-block\">Username is required</div>\n                                        }\n                                    </div>\n                                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n                                    <Form.Input\n                                        fluid\n                                        icon=\"lock\"\n                                        iconPosition=\"left\"\n                                        placeholder=\"Contraseña\"\n                                        type=\"password\"\n                                    />\n                                        {submitted && !password &&\n                                            <div className=\"help-block\">Password is required</div>\n                                        }\n                                    </div>\n                                    <Button color=\"instagram\" fluid size=\"large\"  >\n                                        Ingresar\n                                </Button>\n                                    {error &&\n                                        <div className={'alert alert-danger'}>{error}</div>\n                                    }\n                                </Form>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\nexport default { Login };"]},"metadata":{},"sourceType":"module"}