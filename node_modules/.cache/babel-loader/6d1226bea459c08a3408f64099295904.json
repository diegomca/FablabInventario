{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/ListaProductoDevolucion.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Button, Message, Table } from 'semantic-ui-react';\nimport { UserContext } from '../UseContext';\n\nfunction ListaDevolucion({\n  name,\n  stockPendiente,\n  id\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        banderaSelect = _useState2[0],\n        setBanderaSelect = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stockBandera = _useState4[0],\n        setStockBandera = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stockBanderaCero = _useState6[0],\n        setStockBanderaCero = _useState6[1];\n\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        productosSelect = _useContext2[0],\n        setproductosSelect = _useContext2[1];\n\n  const validacion = (evt, articulo, id, stockDisponible) => {\n    if (Number(evt) > Number(stockDisponible)) {\n      setStockBanderaCero(true);\n      setStockBandera(false);\n      return;\n    }\n\n    if (Number(evt) < 1) {\n      setStockBandera(true);\n      setStockBanderaCero(false);\n      return;\n    }\n\n    setStockBanderaCero(true);\n    setStockBandera(true);\n    setBanderaSelect(!banderaSelect);\n    const temporal = {\n      id: id,\n      producto: articulo,\n      stock: stockDisponible,\n      cantidad: evt\n    };\n    alert(temporal);\n  };\n\n  const eliminar = mensaje => {\n    setBanderaSelect(!banderaSelect);\n  };\n\n  const inputRef = React.createRef();\n  return React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, name), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, stockPendiente), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, stockBandera ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(Message, {\n    negative: true,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"La cantidad es mayor al stock\"), stockBanderaCero ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(Message, {\n    negative: true,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"La cantidad debe ser mayor a 0 \"), React.createElement(\"input\", {\n    id: id,\n    type: \"number\",\n    name: \"hola\",\n    defaultValue: 0,\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, banderaSelect ? React.createElement(Button, {\n    circular: true,\n    color: \"green\",\n    icon: \"add\",\n    onClick: e => {\n      validacion(inputRef.current.value, name, id, stockPendiente);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    circular: true,\n    color: \"red\",\n    icon: \"delete\",\n    onClick: e => {\n      eliminar();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nexport default ListaDevolucion;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/ListaProductoDevolucion.jsx"],"names":["React","useState","useContext","Button","Message","Table","UserContext","ListaDevolucion","name","stockPendiente","id","banderaSelect","setBanderaSelect","stockBandera","setStockBandera","stockBanderaCero","setStockBanderaCero","productosSelect","setproductosSelect","validacion","evt","articulo","stockDisponible","Number","temporal","producto","stock","cantidad","alert","eliminar","mensaje","inputRef","createRef","e","current","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { Button, Message, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaDevolucion({name, stockPendiente, id}) {\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n    const [stockBandera, setStockBandera] = useState(true)\n    const [stockBanderaCero, setStockBanderaCero] = useState(true)\n    const [productosSelect, setproductosSelect] = useContext(UserContext);\n    \n    const validacion = (evt, articulo, id, stockDisponible) => {\n\n        if (Number(evt)>Number(stockDisponible)) {\n            setStockBanderaCero(true);\n            setStockBandera(false);\n            return\n        }\n        if (Number(evt)<1) {\n            setStockBandera(true)\n            setStockBanderaCero(false);\n            return\n        }\n        setStockBanderaCero(true);\n        setStockBandera(true)\n        setBanderaSelect(!banderaSelect)\n        const temporal = {id: id, producto: articulo, stock: stockDisponible, cantidad: evt};\n        \n        alert(temporal)\n    }\n    const eliminar = (mensaje) => {\n        setBanderaSelect(!banderaSelect)\n    }\n    const inputRef = React.createRef();\n\n\n        return (\n\n            <Table.Row>\n                <Table.Cell textAlign=\"center\">{name}</Table.Cell>\n                <Table.Cell textAlign=\"center\">{stockPendiente}</Table.Cell>\n                <Table.Cell textAlign=\"center\">\n                    {stockBandera ? <div /> :<Message negative size=\"mini\">La cantidad es mayor al stock</Message>\n                    }{\n                    stockBanderaCero ? <div /> :\n                            <Message negative size=\"mini\">La cantidad debe ser mayor a 0 </Message>}\n                    <input id={id} type=\"number\" name=\"hola\" defaultValue={0} ref={inputRef} ></input>\n                </Table.Cell>\n                <Table.Cell textAlign=\"center\" >\n                    {banderaSelect ? \n                        <Button circular color=\"green\" icon='add' onClick={e => {validacion(inputRef.current.value, name, id, stockPendiente); }} /> \n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar();  }} /> \n                    }                    \n                </Table.Cell>\n            </Table.Row>\n           )\n    }\n\nexport default ListaDevolucion\n\n"]},"metadata":{},"sourceType":"module"}