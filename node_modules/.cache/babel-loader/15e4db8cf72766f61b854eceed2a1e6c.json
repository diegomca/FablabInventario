{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/eliminar/EliminarProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductoEliminar';\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto } from '../../../firebase';\n\nfunction EliminarProducto() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        productSelect = _useState2[0],\n        setProductSelect = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        productos = _useState4[0],\n        setProductos = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isShowingModal = _useState6[0],\n        setIsShowingModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isClose = _useState8[0],\n        setIsclose = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        descripcion = _useState10[0],\n        setDescripcion = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        file = _useState12[0],\n        setFile = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        nameFile = _useState14[0],\n        setNameFile = _useState14[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaProducto(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n  const fileInputRef = React.createRef();\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  const handleSubmit = evt => {\n    alert(\"Archivo: \".concat(file, \"\\nDescripci\\xF3n: \").concat(descripcion));\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Seleccionar Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Producto  \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const stock = producto.stock,\n          name = producto.name,\n          id = producto.id;\n    return React.createElement(Productselect, {\n      key: id,\n      name: name,\n      stock: stock,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Ver articulos actualizados\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Elementos Seleccionados\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Producto\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Cantidad \"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const producto = item.producto,\n          stock = item.stock;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, producto), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, stock));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), nameFile))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle de la Devolucion\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Agregar\")))));\n}\n\nexport default EliminarProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/eliminar/EliminarProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","TextArea","Card","Table","Modal","Header","Icon","Productselect","UserContext","getListaProducto","EliminarProducto","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","descripcion","setDescripcion","file","setFile","nameFile","setNameFile","providerValue","response","e","console","error","fileInputRef","createRef","getFile","target","files","name","confirmarPedido","evt","length","handleSubmit","alert","map","producto","index","stock","id","textAlign","item","current","click","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,KAApD,EAA2DC,MAA3D,EAAmEC,IAAnE,QAA+E,mBAA/E;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,SAASC,gBAAT,GAA4B;AAAA,oBAEkBf,QAAQ,CAAC,EAAD,CAF1B;AAAA;AAAA,QAEjBgB,aAFiB;AAAA,QAEFC,gBAFE;;AAAA,qBAGUjB,QAAQ,CAAC,EAAD,CAHlB;AAAA;AAAA,QAGjBkB,SAHiB;AAAA,QAGNC,YAHM;;AAAA,qBAKoBnB,QAAQ,CAAC,IAAD,CAL5B;AAAA;AAAA,QAKjBoB,cALiB;AAAA,QAKDC,iBALC;;AAAA,qBAMMrB,QAAQ,CAAC,KAAD,CANd;AAAA;AAAA,QAMjBsB,OANiB;AAAA,QAMRC,UANQ;;AAAA,qBAOcvB,QAAQ,CAAC,EAAD,CAPtB;AAAA;AAAA,QAOjBwB,WAPiB;AAAA,QAOJC,cAPI;;AAAA,sBAQAzB,QAAQ,CAAC,EAAD,CARR;AAAA;AAAA,QAQjB0B,IARiB;AAAA,QAQXC,OARW;;AAAA,sBASQ3B,QAAQ,CAAC,EAAD,CAThB;AAAA;AAAA,QASjB4B,QATiB;AAAA,QASPC,WATO;;AAUxB,QAAMC,aAAa,GAAG7B,OAAO,CAAC,OAAO;AAAEe,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAP,CAAD,EAA8C,CAACD,aAAD,EAAgBC,gBAAhB,CAA9C,CAA7B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,kBAAkB;AACf,UAAI;AACAY,QAAAA,gBAAgB,CAAEiB,QAAD,IAAc;AAC3BZ,UAAAA,YAAY,CAACY,QAAD,CAAZ;AACH,SAFe,CAAhB;AAGH,OAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,KARD,IADY,CASP;;AACR,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMG,YAAY,GAAGpC,KAAK,CAACqC,SAAN,EAArB;;AAEA,QAAMC,OAAO,GAAGL,CAAC,IAAI;AACjBL,IAAAA,OAAO,CAACK,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAV,IAAAA,WAAW,CAACG,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACH,GAHD;;AAIA,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAE7B,QAAI1B,aAAa,CAAC2B,MAAd,GAAuB,CAA3B,EAA8B;AAC1BtB,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAG,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;AACJ,GAND;;AAOA,QAAMsB,YAAY,GAAIF,GAAD,IAAS;AAC1BG,IAAAA,KAAK,oBAAanB,IAAb,+BAAmCF,WAAnC,EAAL;AACH,GAFD;;AAGA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,cAAc,GAEX,oBAAE,KAAF;AAAQ,IAAA,IAAI,EAAEE,OAAd;AAAuB,IAAA,OAAO,EAAE,oBAAE,MAAF;AAAS,MAAA,OAAO,EAAEU,CAAC,IAAIT,UAAU,CAAC,CAACD,OAAF,CAAjC;AAA6C,MAAA,KAAK,MAAlD;AAAmD,MAAA,KAAK,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhC;AAAmI,IAAA,IAAI,EAAC,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ,CADJ,EAQI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,CAAC4B,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA,UACxBC,KADwB,GACJF,QADI,CACxBE,KADwB;AAAA,UACjBT,IADiB,GACJO,QADI,CACjBP,IADiB;AAAA,UACXU,EADW,GACJH,QADI,CACXG,EADW;AAEhC,WACI,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,EAApB;AAAwB,MAAA,IAAI,EAAEV,IAA9B;AAAoC,MAAA,KAAK,EAAES,KAA3C;AAAkD,MAAA,EAAE,EAAEC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GALA,CADL,CARJ,CAFJ,EAmBKlC,aAAa,CAAC2B,MAAd,GAAuB,CAAvB,GAA2B,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEX,CAAC,IAAIS,eAAe,EAAvD;AAA2D,IAAA,KAAK,EAAC,IAAjE;AAAsE,IAAA,QAAQ,MAA9E;AAA+E,IAAA,IAAI,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACd,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAA3B,GACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApB3D,EAqBI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAET,CAAC,IAAI;AAAET,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAAsBL,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAsB,KAAtF;AAAwF,IAAA,KAAK,EAAC,KAA9F;AAAoG,IAAA,QAAQ,MAA5G;AAA6G,IAAA,IAAI,EAAC,QAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADJ,CADJ,CAFJ,CAFW,GAkCX;AAAK,IAAA,KAAK,EAAE;AAAEkC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAA8B,MAAA,QAAQ,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,SAAS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,CADJ,EAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnC,aAAa,CAAC8B,GAAd,CAAkB,CAACM,IAAD,EAAOJ,KAAP,KAAiB;AAAA,UACxBD,QADwB,GACJK,IADI,CACxBL,QADwB;AAAA,UACdE,KADc,GACJG,IADI,CACdH,KADc;AAEhC,WACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaF,QAAb,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCE,KAAjC,CAFJ,CADJ;AAMH,GARA,CADL,CAPJ,CADJ,CADJ,CAFJ,CADJ,EA4BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEjB,CAAC,IAAI;AAAEX,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AAAoCH,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAuB,KAAnF;AAAqF,IAAA,KAAK,EAAC,KAA3F;AAAiG,IAAA,QAAQ,MAAzG;AAA0G,IAAA,QAAQ,EAAC,OAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5BJ,CAnCR,CADJ,EAqEI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMkB,YAAY,CAACkB,OAAb,CAAqBC,KAArB,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,GAAG,EAAEnB,YAAZ;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,MAAM,MAA5C;AAA6C,IAAA,QAAQ,EAAEE,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKT,QAHL,CArEJ,CADJ,CADJ,EAgFI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,SAAf;AAAyB,IAAA,WAAW,EAAC,0BAArC;AAAgE,IAAA,QAAQ,EAAEI,CAAC,IAAIP,cAAc,CAACO,CAAC,CAACM,MAAF,CAASiB,KAAV,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,OAAO,EAAEX,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,CAhFJ,CADJ,CADJ;AA6FH;;AACD,eAAe7B,gBAAf","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductoEliminar'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto } from '../../../firebase';\n\nfunction EliminarProducto() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n    const fileInputRef = React.createRef();\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n        alert(`Archivo: ${file}\\nDescripción: ${descripcion}`)\n    }\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Seleccionar Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Producto  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, name, id } = producto\n                                                            return (\n                                                                <Productselect key={id} name={name} stock={stock} id={id} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver articulos actualizados</Button>} >\n                                        <Modal.Header>Elementos Seleccionados</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Producto</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad </Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { producto, stock } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{producto}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                            {nameFile}\n                        </Grid.Column>\n\n                    </Grid>\n\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EliminarProducto;"]},"metadata":{},"sourceType":"module"}