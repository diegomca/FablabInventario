{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/home/Home.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react'; //import { Link } from 'react-router-dom'\n\nimport { Container, Header, Segment, Grid, Divider, Icon, Button, Card, Statistic, Dimmer, Loader } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu';\nimport Headertop from '../componentes/pagHeader';\nimport entregado from './imagenes/entregadeproductos.png';\nimport actualizar from './imagenes/actualizarstock.png';\nimport devolucion from './imagenes/devoluciondeproducto.png';\nimport agregado from './imagenes/productoagregado.png';\nimport eliminado from './imagenes/productoeliminado.png';\nimport { getListaRegistroHome, getTipoRegistroHome, getDevolucionesHome, getEntregasMes } from '../firebase';\n\nfunction Home() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ultimosRegistros = _useState2[0],\n        setultimosRegistros = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        terminoultimosRegistros = _useState4[0],\n        setterminoultimosRegistros = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pendientesDevolucion = _useState6[0],\n        setpendientesDevolucion = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        terminoPendientesDevolucion = _useState8[0],\n        setTerminopendientesDevolucion = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        cantidadRegistrosAnual = _useState10[0],\n        setcantidadRegistrosAnual = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        terminocantidadRegistrosAnual = _useState12[0],\n        setTerminocantidadRegistrosAnual = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        entregaProductosMensual = _useState14[0],\n        setentregaProductosMensual = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        terminoentregaProductosMensual = _useState16[0],\n        setTerminoentregaProductosMensual = _useState16[1];\n\n  useEffect(() => {\n    getListaRegistroHome(response => {\n      setultimosRegistros(response);\n    }, termino => {\n      setterminoultimosRegistros(termino);\n    });\n    getTipoRegistroHome(response => {\n      setcantidadRegistrosAnual(response);\n    }, termino => {\n      setTerminocantidadRegistrosAnual(termino);\n    });\n    getDevolucionesHome(response => {\n      setpendientesDevolucion(response);\n    }, termino => {\n      setTerminopendientesDevolucion(termino);\n    });\n    getEntregasMes(response => {\n      setentregaProductosMensual(response);\n    }, termino => {\n      setTerminoentregaProductosMensual(termino);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Headertop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Inventario Fablab UV.\"), React.createElement(Segment, {\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 2,\n    stackable: true,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"-\"), React.createElement(Grid.Row, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"product hunt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Listado con n\\xFAmeros UV\"), React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Ver\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \"Lista de Registros\"), React.createElement(Button, {\n    href: \"/registro\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Registros\"))))), React.createElement(Grid, {\n    columns: \"equal\",\n    divided: true,\n    padded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, !terminoPendientesDevolucion ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Cargando datos\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })) : React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Productos Pendientes Devoluci\\xF3n\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, pendientesDevolucion))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, !terminocantidadRegistrosAnual ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Cargando datos\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })) : React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Cantidad Registro Anual\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, cantidadRegistrosAnual))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, !terminoentregaProductosMensual ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Cargando datos\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })) : React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Entregas de productos este mes\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, entregaProductosMensual))))), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Ultimos Registros realizados\"), React.createElement(Grid, {\n    columns: \"equal\",\n    divided: true,\n    padded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, !terminoultimosRegistros && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Cargando datos\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), ultimosRegistros.map(datos => {\n    var foto = null;\n\n    if (datos.peticion === 'Entrega de producto') {\n      foto = entregado;\n    }\n\n    if (datos.peticion === 'Nuevo producto') {\n      foto = agregado;\n    }\n\n    if (datos.peticion === 'Devolucion de producto') {\n      foto = devolucion;\n    }\n\n    if (datos.peticion === 'Actualizar stock') {\n      foto = actualizar;\n    }\n\n    if (datos.peticion === 'Producto removido') {\n      foto = eliminado;\n    }\n\n    var date = new Date(datos.fecha);\n    var fechaString = \"\";\n    var months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    fechaString = day + '/' + month + '/' + year;\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Card, {\n      image: foto,\n      header: datos.encargado,\n      meta: fechaString,\n      description: datos.comentario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })));\n  }))), React.createElement(Segment, {\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"pdf file outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), \"No documents are listed for this customer.\"), React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Add Document\"))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/home/Home.jsx"],"names":["React","Fragment","useState","useEffect","Container","Header","Segment","Grid","Divider","Icon","Button","Card","Statistic","Dimmer","Loader","Menu","Headertop","entregado","actualizar","devolucion","agregado","eliminado","getListaRegistroHome","getTipoRegistroHome","getDevolucionesHome","getEntregasMes","Home","ultimosRegistros","setultimosRegistros","terminoultimosRegistros","setterminoultimosRegistros","pendientesDevolucion","setpendientesDevolucion","terminoPendientesDevolucion","setTerminopendientesDevolucion","cantidadRegistrosAnual","setcantidadRegistrosAnual","terminocantidadRegistrosAnual","setTerminocantidadRegistrosAnual","entregaProductosMensual","setentregaProductosMensual","terminoentregaProductosMensual","setTerminoentregaProductosMensual","response","termino","map","datos","foto","peticion","date","Date","fecha","fechaString","months_arr","year","getFullYear","month","getMonth","day","getDate","encargado","comentario"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n//import { Link } from 'react-router-dom'\nimport { Container, Header, Segment, Grid, Divider, Icon, Button, Card, Statistic, Dimmer, Loader } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader'\nimport entregado from './imagenes/entregadeproductos.png'\nimport actualizar from './imagenes/actualizarstock.png'\nimport devolucion from './imagenes/devoluciondeproducto.png'\nimport agregado from './imagenes/productoagregado.png'\nimport eliminado from './imagenes/productoeliminado.png'\nimport { getListaRegistroHome, getTipoRegistroHome, getDevolucionesHome, getEntregasMes } from '../firebase';\n\n\n\nfunction Home() {\n\n    const [ultimosRegistros, setultimosRegistros] = useState([])\n    const [terminoultimosRegistros, setterminoultimosRegistros] = useState(false)\n    const [pendientesDevolucion, setpendientesDevolucion] = useState(0)\n    const [terminoPendientesDevolucion, setTerminopendientesDevolucion] = useState(false)\n    const [cantidadRegistrosAnual, setcantidadRegistrosAnual] = useState(0)\n    const [terminocantidadRegistrosAnual, setTerminocantidadRegistrosAnual] = useState(false)\n    const [entregaProductosMensual, setentregaProductosMensual] = useState(0)\n    const [terminoentregaProductosMensual, setTerminoentregaProductosMensual] = useState(false)\n\n\n    useEffect(() => {\n\n        getListaRegistroHome(response => {\n            setultimosRegistros(response)\n        }, termino => {\n            setterminoultimosRegistros(termino)\n        })\n\n        getTipoRegistroHome(response => {\n            setcantidadRegistrosAnual(response)\n        }, termino => {\n            setTerminocantidadRegistrosAnual(termino)\n        })\n\n        getDevolucionesHome(response => {\n            setpendientesDevolucion(response)\n        }, termino => {\n            setTerminopendientesDevolucion(termino)\n        })\n\n        getEntregasMes(response => {\n            setentregaProductosMensual(response)\n        }, termino => {\n            setTerminoentregaProductosMensual(termino)\n        })\n\n\n\n    }, [])\n\n    return (\n        <div>\n            <Fragment>\n                <Menu />\n                <Container>\n                    <Headertop />\n                    <div>\n                        <Header size=\"huge\">Inventario Fablab UV.</Header>\n                        <Segment placeholder>\n                            <Grid columns={2} stackable textAlign='center'>\n                                <Divider vertical>-</Divider>\n                                <Grid.Row verticalAlign='middle'>\n                                    <Grid.Column>\n                                        <Header icon>\n                                            <Icon name='product hunt' />\n                                            Listado con números UV\n                                            </Header>\n                                        <Button primary>Ver</Button>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Header icon>\n                                            <Icon name='world' />\n                                            Lista de Registros\n                                            </Header>\n                                        <Button href=\"/registro\" primary>Registros</Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Segment>\n                        <Grid columns='equal' divided padded>\n                            <Grid.Row textAlign='center'>\n                                <Grid.Column>\n                                    {\n                                        !terminoPendientesDevolucion ?\n                                            <div>\n                                                <br></br>\n                                                <Dimmer active inverted>\n                                                    <Loader >Cargando datos</Loader>\n                                                </Dimmer>\n                                                <br></br>\n                                            </div> :\n                                            <Statistic size='huge'>\n                                                <Statistic.Label>Productos Pendientes Devolución</Statistic.Label>\n                                                <Statistic.Value>{pendientesDevolucion}</Statistic.Value>\n                                            </Statistic>\n                                    }\n                                </Grid.Column>\n                                <Grid.Column>\n                                    {\n                                        !terminocantidadRegistrosAnual ?\n                                            <div>\n                                                <br></br>\n                                                <Dimmer active inverted>\n                                                    <Loader >Cargando datos</Loader>\n                                                </Dimmer>\n                                                <br></br>\n                                            </div> :\n                                            <Statistic size='huge'>\n                                                <Statistic.Label>Cantidad Registro Anual</Statistic.Label>\n                                                <Statistic.Value>{cantidadRegistrosAnual}</Statistic.Value>\n                                            </Statistic>\n                                    }\n                                </Grid.Column>\n                                <Grid.Column>\n                                    {\n                                        !terminoentregaProductosMensual ?\n                                            <div>\n                                                <br></br>\n                                                <Dimmer active inverted>\n                                                    <Loader >Cargando datos</Loader>\n                                                </Dimmer>\n                                                <br></br>\n                                            </div> :\n                                            <Statistic size='huge'>\n                                                <Statistic.Label>Entregas de productos este mes</Statistic.Label>\n                                                <Statistic.Value>{entregaProductosMensual}</Statistic.Value>\n                                            </Statistic>\n                                    }\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                        <Header>Ultimos Registros realizados</Header>\n                        <Grid columns='equal' divided padded>\n                            <Grid.Row textAlign='center'>\n                                {\n                                    !terminoultimosRegistros &&\n                                    <div>\n                                        <br></br>\n                                        <Dimmer active inverted>\n                                            <Loader inverted>Cargando datos</Loader>\n                                        </Dimmer>\n                                        <br></br>\n                                    </div>\n\n                                }\n                                {\n                                    ultimosRegistros.map(datos => {\n                                        var foto = null;\n                                        if (datos.peticion === 'Entrega de producto') {\n                                            foto = entregado;\n                                        } if (datos.peticion === 'Nuevo producto') {\n                                            foto = agregado;\n                                        } if (datos.peticion === 'Devolucion de producto') {\n                                            foto = devolucion;\n                                        } if (datos.peticion === 'Actualizar stock') {\n                                            foto = actualizar;\n                                        } if (datos.peticion === 'Producto removido') {\n                                            foto = eliminado;\n                                        }\n\n                                        var date = new Date(datos.fecha);\n                                        var fechaString = \"\";\n                                        var months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n                                        var year = date.getFullYear();\n                                        var month = months_arr[date.getMonth()];\n                                        var day = date.getDate();\n                                        fechaString = day + '/' + month + '/' + year;\n\n                                        return (\n                                            <Grid.Column>\n                                                <Segment  >\n                                                    <Card\n                                                        image={foto}\n                                                        header={datos.encargado}\n                                                        meta={fechaString}\n                                                        description={datos.comentario}\n                                                    />\n                                                </Segment>\n                                            </Grid.Column>\n                                        )\n                                    })\n                                }\n\n                            </Grid.Row>\n                        </Grid>\n                        <Segment placeholder>\n                            <Header icon>\n                                <Icon name='pdf file outline' />\n                                No documents are listed for this customer.\n                            </Header>\n                            <Button primary>Add Document</Button>\n                        </Segment>\n                    </div>\n                </Container>\n            </Fragment>\n            <br></br>\n            <br></br>\n        </div>\n    );\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}