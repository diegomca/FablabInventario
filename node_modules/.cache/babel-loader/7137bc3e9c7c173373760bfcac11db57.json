{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventario/src/registro_components/inputSearch.js\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Label } from 'semantic-ui-react';\n\nconst categoryRenderer = ({\n  name\n}) => React.createElement(Label, {\n  as: \"span\",\n  content: name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n});\n\ncategoryRenderer.propTypes = {\n  name: PropTypes.string\n};\n\nconst resultRenderer = ({\n  title\n}) => React.createElement(Label, {\n  content: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nconst getResults = () => _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst source = _.range(0, 3).reduce(memo => {\n  const name = faker.hacker.noun(); // eslint-disable-next-line no-param-reassign\n\n  memo[name] = {\n    name,\n    results: getResults()\n  };\n  return memo;\n}, {});\n\nexport default class SearchExampleCategory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        const filteredResults = _.reduce(source, (memo, data, name) => {\n          const results = _.filter(data.results, isMatch);\n\n          if (results.length) memo[name] = {\n            name,\n            results // eslint-disable-line no-param-reassign\n\n          };\n          return memo;\n        }, {});\n\n        this.setState({\n          isLoading: false,\n          results: filteredResults\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      category: true,\n      categoryRenderer: categoryRenderer,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      resultRenderer: resultRenderer,\n      results: results,\n      value: value\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventario/src/registro_components/inputSearch.js"],"names":["PropTypes","_","faker","React","Component","Search","Grid","Label","categoryRenderer","name","propTypes","string","resultRenderer","title","description","initialState","isLoading","results","value","getResults","times","company","companyName","catchPhrase","image","internet","avatar","price","finance","amount","source","range","reduce","memo","hacker","noun","SearchExampleCategory","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filteredResults","data","filter","render","debounce","leading","props"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Search, Grid, Label } from 'semantic-ui-react'\n\nconst categoryRenderer = ({ name }) => <Label as='span' content={name} />\n\ncategoryRenderer.propTypes = {\n  name: PropTypes.string,\n}\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nconst getResults = () =>\n  _.times(5, () => ({\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, '$'),\n  }))\n\nconst source = _.range(0, 3).reduce((memo) => {\n  const name = faker.hacker.noun()\n\n  // eslint-disable-next-line no-param-reassign\n  memo[name] = {\n    name,\n    results: getResults(),\n  }\n\n  return memo\n}, {})\n\nexport default class SearchExampleCategory extends Component {\n  state = initialState\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      const filteredResults = _.reduce(\n        source,\n        (memo, data, name) => {\n          const results = _.filter(data.results, isMatch)\n          if (results.length) memo[name] = { name, results } // eslint-disable-line no-param-reassign\n\n          return memo\n        },\n        {},\n      )\n\n      this.setState({\n        isLoading: false,\n        results: filteredResults,\n      })\n    }, 300)\n  }\n  render() {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <Grid>\n        <Grid.Column width={8}>\n          <Search\n            category\n            categoryRenderer={categoryRenderer}\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            resultRenderer={resultRenderer}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        \n      </Grid>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}