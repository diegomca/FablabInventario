{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/entrega/EntregaProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon, Image, Progress, Dimmer, Loader } from 'semantic-ui-react';\nimport Productselect from './ProductSelect';\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, setRegistro, updateProducto, updateHistorica, setDatosGrafico, setArchivo } from '../../../firebase';\n\nfunction EntregaProducto() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        subiendoBandera = _useState2[0],\n        setsubiendoBandera = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        nameFile = _useState6[0],\n        setNameFile = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        progreso = _useState8[0],\n        setProgreso = _useState8[1];\n\n  var url_subir = null;\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const fileInputRef = React.createRef();\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        productSelect = _useState10[0],\n        setProductSelect = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        productos = _useState12[0],\n        setProductos = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isShowingModal = _useState14[0],\n        setIsShowingModal = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isClose = _useState16[0],\n        setIsclose = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        encargado = _useState18[0],\n        setEncargado = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        descripcion = _useState20[0],\n        setDescripcion = _useState20[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaProducto(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  const handleSubmit = evt => {\n    if (encargado !== \"\" && productSelect.length >= 1) {\n      setsubiendoBandera(true);\n\n      if (file !== null) {\n        setArchivo(file, nameFile, resp => {\n          url_subir = resp;\n        }, porcentaje => {\n          setProgreso(porcentaje);\n        }, bandera => {\n          if (bandera) {\n            var temp_lista = \"\";\n            productSelect.map(productos => {\n              temp_lista = temp_lista + \"Marca: \".concat(productos.marca, \" Modelo: \").concat(productos.modelo, \" Cantidad: \").concat(productos.cantidad) + React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 68\n                },\n                __self: this\n              });\n              let disponible = Number(productos.stock) - Number(productos.cantidad);\n              updateProducto(productos.ruta, disponible);\n              updateHistorica(productos.ruta, Number(productos.cantidad));\n              var temp_var = new Date();\n              setDatosGrafico(productos.marca, productos.modelo, Number(productos.cantidad), temp_var.getFullYear(), temp_var.getMonth());\n            });\n            var lista = [];\n            productSelect.map(wea => {\n              lista.push({\n                marca: wea.marca,\n                modelo: wea.modelo,\n                cantidad: wea.cantidad\n              });\n            });\n            var fecha_date = new Date();\n            var ano = fecha_date.getFullYear();\n            let temp_subir = {\n              encargado: encargado,\n              peticion: \"Entrega de producto\",\n              lista: lista,\n              fecha: Date.now(),\n              comentario: descripcion,\n              año: ano,\n              mes: fecha_date.getMonth(),\n              ruta_img: url_subir\n            };\n            setRegistro(temp_subir, resp => {\n              if (resp) {\n                window.location = '/registro';\n              }\n            });\n          }\n        });\n      } else {\n        var temp_lista = \"\";\n        productSelect.map(productos => {\n          temp_lista = temp_lista + \"Marca: \".concat(productos.marca, \" Modelo: \").concat(productos.modelo, \" Cantidad: \").concat(productos.cantidad) + React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n          let disponible = Number(productos.stock) - Number(productos.cantidad);\n          updateProducto(productos.ruta, disponible);\n          updateHistorica(productos.ruta, Number(productos.cantidad));\n          var temp_var = new Date();\n          setDatosGrafico(productos.marca, productos.modelo, Number(productos.cantidad), temp_var.getFullYear(), temp_var.getMonth());\n        });\n        var lista = [];\n        productSelect.map(wea => {\n          lista.push({\n            marca: wea.marca,\n            modelo: wea.modelo,\n            cantidad: wea.cantidad\n          });\n        });\n        var fecha_date = new Date();\n        var ano = fecha_date.getFullYear();\n        let temp_subir = {\n          encargado: encargado,\n          peticion: \"Entrega de producto\",\n          lista: lista,\n          fecha: Date.now(),\n          comentario: descripcion,\n          año: ano,\n          mes: fecha_date.getMonth(),\n          ruta_img: url_subir\n        };\n        setRegistro(temp_subir, resp => {\n          if (resp) {\n            window.location = '/registro';\n          }\n        });\n      }\n    } else {\n      alert(\"Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente\");\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Entrega de Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Marca \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Modelo \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Articulos Disponibles\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const disponible = producto.disponible,\n          marca = producto.marca,\n          modelo = producto.modelo,\n          codigo = producto.codigo,\n          ubicacion = producto.ubicacion,\n          stock = producto.stock,\n          key = producto.key;\n    return React.createElement(Productselect, {\n      key: index,\n      ubicacion: ubicacion,\n      total: stock,\n      marca: marca,\n      modelo: modelo,\n      stock: disponible,\n      id: codigo,\n      ruta: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Ver Articulos\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Elementos seleccionados para entrega\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Marca\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Modelo\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Disponibilidad\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Cantidad Pedida\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const marca = item.marca,\n          modelo = item.modelo,\n          stock = item.stock,\n          cantidad = item.cantidad;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, marca), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, modelo), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, stock), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, cantidad));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    name: \"encargado\",\n    placeholder: \"Encargado\",\n    onChange: e => setEncargado(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), progreso !== null && React.createElement(Grid.Column, {\n    width: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Progress, {\n    percent: progreso,\n    indicating: true,\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), !subiendoBandera ? React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Agregar\") : React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))))));\n}\n\nexport default EntregaProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/entrega/EntregaProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","Input","TextArea","Card","Modal","Header","Table","Icon","Image","Progress","Dimmer","Loader","Productselect","UserContext","getListaProducto","setRegistro","updateProducto","updateHistorica","setDatosGrafico","setArchivo","EntregaProducto","subiendoBandera","setsubiendoBandera","file","setFile","nameFile","setNameFile","progreso","setProgreso","url_subir","getFile","e","target","files","name","fileInputRef","createRef","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","encargado","setEncargado","descripcion","setDescripcion","providerValue","response","console","error","confirmarPedido","evt","length","handleSubmit","resp","porcentaje","bandera","temp_lista","map","marca","modelo","cantidad","disponible","Number","stock","ruta","temp_var","Date","getFullYear","getMonth","lista","wea","push","fecha_date","ano","temp_subir","peticion","fecha","now","comentario","año","mes","ruta_img","window","location","alert","producto","index","codigo","ubicacion","key","textAlign","item","value","current","click"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon, Image, Progress, Dimmer, Loader } from 'semantic-ui-react';\nimport Productselect from './ProductSelect'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, setRegistro, updateProducto, updateHistorica, setDatosGrafico, setArchivo } from '../../../firebase';\n\nfunction EntregaProducto() {\n\n    const [subiendoBandera, setsubiendoBandera] = useState(false)\n\n\n    const [file, setFile] = useState(null);\n    const [nameFile, setNameFile] = useState(null);\n    const [progreso, setProgreso] = useState(null)\n\n    var url_subir = null;\n\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n\n    const fileInputRef = React.createRef();\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n        if (encargado !== \"\" && productSelect.length >= 1) {\n            setsubiendoBandera(true)\n            if (file !== null) {\n                setArchivo(file, nameFile, (resp) => {\n                    url_subir = resp\n                }, (porcentaje) => {\n                    setProgreso(porcentaje)\n                }, bandera => {\n                    if (bandera) {\n                        var temp_lista = \"\"\n                        productSelect.map((productos) => {\n                            temp_lista = temp_lista + `Marca: ${productos.marca} Modelo: ${productos.modelo} Cantidad: ${productos.cantidad}` + <br></br>;\n                            let disponible = Number(productos.stock) - Number(productos.cantidad);\n                            updateProducto(productos.ruta, disponible)\n                            updateHistorica(productos.ruta, Number(productos.cantidad))\n                            var temp_var = new Date()\n                            setDatosGrafico(productos.marca, productos.modelo, Number(productos.cantidad), temp_var.getFullYear(), temp_var.getMonth())\n                        })\n\n                        var lista = [];\n                        productSelect.map((wea) => {\n                            lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n                        })\n                        var fecha_date = new Date();\n                        var ano = fecha_date.getFullYear();\n                        let temp_subir = { encargado: encargado, peticion: \"Entrega de producto\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth(), ruta_img: url_subir }\n                        setRegistro(temp_subir, (resp) => {\n                            if (resp) {\n                                window.location = '/registro'\n                            }\n                        })\n                    }\n                })\n            } else {\n                var temp_lista = \"\"\n                productSelect.map((productos) => {\n                    temp_lista = temp_lista + `Marca: ${productos.marca} Modelo: ${productos.modelo} Cantidad: ${productos.cantidad}` + <br></br>;\n                    let disponible = Number(productos.stock) - Number(productos.cantidad);\n                    updateProducto(productos.ruta, disponible)\n                    updateHistorica(productos.ruta, Number(productos.cantidad))\n                    var temp_var = new Date()\n                    setDatosGrafico(productos.marca, productos.modelo, Number(productos.cantidad), temp_var.getFullYear(), temp_var.getMonth())\n                })\n\n                var lista = [];\n                productSelect.map((wea) => {\n                    lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n                })\n                var fecha_date = new Date();\n                var ano = fecha_date.getFullYear();\n                let temp_subir = { encargado: encargado, peticion: \"Entrega de producto\", lista: lista, fecha: Date.now(), comentario: descripcion, año: ano, mes: fecha_date.getMonth(), ruta_img: url_subir }\n                setRegistro(temp_subir, (resp) => {\n                    if (resp) {\n                        window.location = '/registro'\n                    }\n                })\n            }\n        } else {\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Entrega de Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca </Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Disponibles</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { disponible, marca, modelo, codigo, ubicacion, stock, key } = producto\n                                                            return (\n                                                                <Productselect key={index} ubicacion={ubicacion} total={stock} marca={marca} modelo={modelo} stock={disponible} id={codigo} ruta={key} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para entrega</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Disponibilidad</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Pedida</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { marca, modelo, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{marca}</Table.Cell>\n                                                                    <Table.Cell>{modelo}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Input fluid name=\"encargado\" placeholder=\"Encargado\" onChange={e => setEncargado(e.target.value)} />\n                        </Grid.Column>\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                        </Grid.Column>\n                        {\n                            progreso !== null &&\n                            <Grid.Column width={4} >\n                                <Progress percent={progreso} indicating size=\"medium\" />\n                            </Grid.Column>\n                        }\n                    </Grid>\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle' onChange={e => setDescripcion(e.target.value)} />\n                        {\n                            !subiendoBandera ?\n                                <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                                    Agregar\n                        </Button>\n                                :\n                                <Dimmer active inverted>\n                                    <Loader />\n                                </Dimmer>\n                        }\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EntregaProducto;"]},"metadata":{},"sourceType":"module"}