{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/ListaProductoDevolucion.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Button, Message, Table } from 'semantic-ui-react';\nimport { UserContext } from '../UseContext';\n\nfunction ListaDevolucion({\n  marca,\n  modelo,\n  stock,\n  id\n}) {\n  const _useContext = useContext(UserContext),\n        productSelect = _useContext.productSelect,\n        setProductSelect = _useContext.setProductSelect;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        banderaSelect = _useState2[0],\n        setBanderaSelect = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stockBandera = _useState4[0],\n        setStockBandera = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stockBanderaCero = _useState6[0],\n        setStockBanderaCero = _useState6[1];\n\n  const validacion = (evt, marca, modelo, id, stockDisponible) => {\n    if (Number(evt) > Number(stockDisponible)) {\n      setStockBanderaCero(true);\n      setStockBandera(false);\n      return;\n    }\n\n    if (Number(evt) < 1) {\n      setStockBandera(true);\n      setStockBanderaCero(false);\n      return;\n    }\n\n    setStockBanderaCero(true);\n    setStockBandera(true);\n    setBanderaSelect(!banderaSelect);\n\n    if (productSelect.length === 0) {\n      setProductSelect([{\n        id: id,\n        marca: marca,\n        modelo: modelo,\n        stock: stockDisponible,\n        cantidad: evt\n      }]);\n    } else {\n      setProductSelect([...productSelect, {\n        id: id,\n        marca: marca,\n        modelo: modelo,\n        stock: stockDisponible,\n        cantidad: evt\n      }]);\n    }\n  };\n\n  const eliminar = identificador => {\n    const temp = productSelect;\n    productSelect.map((producto, index) => {\n      const id = producto.id;\n\n      if (identificador === id) {\n        if (temp.length === 1) {\n          temp.splice(index, index + 1);\n        } else {\n          temp.splice(index, index);\n        }\n\n        setProductSelect(temp);\n      }\n\n      return 1;\n    });\n    setBanderaSelect(!banderaSelect);\n  };\n\n  const inputRef = React.createRef();\n  return React.createElement(Table.Row, {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, marca), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, modelo), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, stock), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, stockBandera ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : React.createElement(Message, {\n    negative: true,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"La cantidad es mayor a los articulos pendientes\"), stockBanderaCero ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : React.createElement(Message, {\n    negative: true,\n    size: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"La cantidad debe ser mayor a 0 \"), React.createElement(\"input\", {\n    id: id,\n    type: \"number\",\n    name: \"hola\",\n    defaultValue: 0,\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Table.Cell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, banderaSelect ? React.createElement(Button, {\n    circular: true,\n    color: \"green\",\n    icon: \"add\",\n    onClick: e => {\n      validacion(inputRef.current.value, marca, modelo, id, stock);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    circular: true,\n    color: \"red\",\n    icon: \"delete\",\n    onClick: e => {\n      eliminar(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n}\n\nexport default ListaDevolucion;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/ListaProductoDevolucion.jsx"],"names":["React","useState","useContext","Button","Message","Table","UserContext","ListaDevolucion","marca","modelo","stock","id","productSelect","setProductSelect","banderaSelect","setBanderaSelect","stockBandera","setStockBandera","stockBanderaCero","setStockBanderaCero","validacion","evt","stockDisponible","Number","length","cantidad","eliminar","identificador","temp","map","producto","index","splice","inputRef","createRef","e","current","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Button, Message, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaDevolucion({ marca, modelo, stock, id }) {\n\n    const { productSelect, setProductSelect } = useContext(UserContext);\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n    const [stockBandera, setStockBandera] = useState(true)\n    const [stockBanderaCero, setStockBanderaCero] = useState(true)\n    const validacion = (evt, marca,modelo, id, stockDisponible) => {\n\n        if (Number(evt) > Number(stockDisponible)) {\n            setStockBanderaCero(true);\n            setStockBandera(false);\n            return\n        }\n        if (Number(evt) < 1) {\n            setStockBandera(true)\n            setStockBanderaCero(false);\n            return\n        }\n        setStockBanderaCero(true);\n        setStockBandera(true);\n        setBanderaSelect(!banderaSelect);\n        if (productSelect.length === 0) {\n            setProductSelect([{ id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt }])\n        } else {\n            setProductSelect([...productSelect, { id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt }])\n        }\n\n    }\n    const eliminar = (identificador) => {\n        const temp = productSelect;\n        productSelect.map((producto, index) => {\n            const { id } = producto\n            if (identificador === id) {\n                if (temp.length === 1) {\n                    temp.splice(index, index + 1);\n                } else {\n                    temp.splice(index, index);\n                }\n                setProductSelect(temp);\n            }\n            return 1;\n\n        })\n\n        setBanderaSelect(!banderaSelect)\n\n    }\n    const inputRef = React.createRef();\n\n\n    return (\n\n        <Table.Row key={id}>\n            <Table.Cell textAlign=\"center\">{marca}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{modelo}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{stock}</Table.Cell>\n            <Table.Cell textAlign=\"center\">\n                {stockBandera ? <div /> : <Message negative size=\"mini\">La cantidad es mayor a los articulos pendientes</Message>\n                }{\n                    stockBanderaCero ? <div /> :\n                        <Message negative size=\"mini\">La cantidad debe ser mayor a 0 </Message>}\n                <input id={id} type=\"number\" name=\"hola\" defaultValue={0} ref={inputRef} ></input>\n            </Table.Cell>\n            <Table.Cell textAlign=\"center\" >\n                {banderaSelect ?\n                    <Button circular color=\"green\" icon='add' onClick={e => { validacion(inputRef.current.value, marca,modelo, id, stock); }} />\n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar(id); }} />\n                }\n            </Table.Cell>\n        </Table.Row>\n    )\n}\nexport default ListaDevolucion\n\n"]},"metadata":{},"sourceType":"module"}