{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/eliminar/EliminarProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductoEliminar';\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, removeProducto, setRegistro } from '../../../firebase';\n\nfunction EliminarProducto() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        productSelect = _useState2[0],\n        setProductSelect = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        productos = _useState4[0],\n        setProductos = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isShowingModal = _useState6[0],\n        setIsShowingModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isClose = _useState8[0],\n        setIsclose = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        descripcion = _useState10[0],\n        setDescripcion = _useState10[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaProducto(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  const handleSubmit = evt => {\n    if (productSelect.length > 0) {\n      productSelect.map(productos => {\n        console.log(productos.ruta);\n        removeProducto(productos.ruta);\n      });\n      var lista = [];\n      productSelect.map(wea => {\n        lista.push({\n          marca: wea.marca,\n          modelo: wea.modelo,\n          stock: wea.stock\n        });\n      });\n      var fecha_date = new Date();\n      var ano = fecha_date.getFullYear();\n      let temp_subir = {\n        encargado: \"Administrador\",\n        peticion: \"Producto removido\",\n        lista: lista,\n        fecha: Date.now(),\n        comentario: descripcion,\n        aÃ±o: ano,\n        mes: fecha_date.getMonth()\n      };\n      setRegistro(temp_subir, resp => {\n        if (resp) {\n          window.location = '/registro';\n        }\n      });\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Seleccionar Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Marca  \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Modelo  \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const stock = producto.stock,\n          marca = producto.marca,\n          codigo = producto.codigo,\n          modelo = producto.modelo,\n          key = producto.key;\n    return React.createElement(Productselect, {\n      key: index,\n      marca: marca,\n      stock: stock,\n      id: codigo,\n      modelo: modelo,\n      ruta: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Ver articulos actualizados\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Elementos Seleccionados\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Marca\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Modelo\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Cantidad \"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const marca = item.marca,\n          modelo = item.modelo,\n          stock = item.stock;\n    return React.createElement(Table.Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, marca), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, modelo), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, stock));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle de la Devolucion\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Agregar\")))));\n}\n\nexport default EliminarProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/eliminar/EliminarProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","TextArea","Card","Table","Modal","Header","Icon","Productselect","UserContext","getListaProducto","removeProducto","setRegistro","EliminarProducto","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","descripcion","setDescripcion","providerValue","response","e","console","error","confirmarPedido","evt","length","handleSubmit","map","log","ruta","lista","wea","push","marca","modelo","stock","fecha_date","Date","ano","getFullYear","temp_subir","encargado","peticion","fecha","now","comentario","aÃ±o","mes","getMonth","resp","window","location","producto","index","codigo","key","textAlign","item","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductoEliminar'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, removeProducto, setRegistro } from '../../../firebase';\n\nfunction EliminarProducto() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [descripcion, setDescripcion] = useState(\"\");\n\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n\n        if (productSelect.length > 0) {\n            productSelect.map((productos) => {\n                console.log(productos.ruta)\n                removeProducto(productos.ruta)\n            })\n            var lista = [];\n            productSelect.map((wea) => {\n                lista.push({ marca: wea.marca, modelo: wea.modelo, stock: wea.stock })\n            })\n\n            var fecha_date = new Date();\n            var ano = fecha_date.getFullYear();\n            let temp_subir = { encargado: \"Administrador\", peticion: \"Producto removido\", lista: lista, fecha: Date.now(), comentario: descripcion, aÃ±o: ano, mes: fecha_date.getMonth() }\n            setRegistro(temp_subir, (resp) => {\n                if (resp) {\n                    window.location = '/registro'\n                }\n            })\n        } else {\n            console.log(\"error\")\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Seleccionar Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, codigo, modelo, key } = producto\n                                                            return (\n                                                                <Productselect key={index} marca={marca} stock={stock} id={codigo} modelo={modelo} ruta={key}></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver articulos actualizados</Button>} >\n                                        <Modal.Header>Elementos Seleccionados</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad </Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { marca, modelo, stock } = item\n                                                            return (\n                                                                <Table.Row key={index}>\n                                                                    <Table.Cell>{marca}</Table.Cell>\n                                                                    <Table.Cell>{modelo}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n\n                    </Grid>\n\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EliminarProducto;"]},"metadata":{},"sourceType":"module"}