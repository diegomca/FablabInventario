{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/DevolucionProducto.jsx\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ListaProductoDevolucion';\nimport { UserContext } from '../UseContext';\nimport { getListaAnalisis } from '../../../firebase';\n\nfunction DevolucionProducto() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        productSelect = _useState2[0],\n        setProductSelect = _useState2[1]; // const [productos] = useState([\n  //     { id: 0, stock: 5, name: 'Arduino' },\n  //     { id: 1, stock: 7, name: 'Impresora' },\n  //     { id: 2, stock: 12, name: 'Sensor Ultrasonido' },\n  //     { id: 3, stock: 32, name: 'Led Rojo' },\n  //     { id: 4, stock: 50, name: 'Resistencias' },\n  //     { id: 37, stock: 50, name: 'Resistencias' },\n  //     { id: 8, stock: 50, name: 'Resistencias' },\n  //     { id: 9, stock: 10, name: 'Protoboard' }]);\n\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        productos = _useState4[0],\n        setProductos = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isShowingModal = _useState6[0],\n        setIsShowingModal = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isClose = _useState8[0],\n        setIsclose = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        encargado = _useState10[0],\n        setEncargado = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        descripcion = _useState12[0],\n        setDescripcion = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        file = _useState14[0],\n        setFile = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        nameFile = _useState16[0],\n        setNameFile = _useState16[1];\n\n  const providerValue = useMemo(() => ({\n    productSelect,\n    setProductSelect\n  }), [productSelect, setProductSelect]);\n  const fileInputRef = React.createRef();\n  useEffect(() => {\n    (async function () {\n      try {\n        getListaAnalisis(response => {\n          setProductos(response);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })(); // eslint-disable-next-line\n\n  }, []);\n\n  const getFile = e => {\n    setFile(e.target.files[0]);\n    setNameFile(e.target.files[0].name);\n  };\n\n  const handleSubmit = evt => {\n    alert(encargado + descripcion + file);\n  };\n\n  const confirmarPedido = evt => {\n    if (productSelect.length > 0) {\n      setIsShowingModal(!isShowingModal);\n      setIsclose(!isClose);\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: providerValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, isShowingModal ? React.createElement(Modal, {\n    open: isClose,\n    trigger: React.createElement(Button, {\n      onClick: e => setIsclose(!isClose),\n      fluid: true,\n      color: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Lista de Productos\"),\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Devolucion Producto\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Lista de Productos\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Producto  \"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Articulos Pendientes\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Cantidad\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Seleccionar\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, productos.map((producto, index) => {\n    const stock = producto.stock,\n          marca = producto.marca,\n          modelo = producto.modelo,\n          id = producto.id,\n          disponible = producto.disponible;\n    let dev_stock = Number(stock) - Number(disponible);\n    return React.createElement(Productselect, {\n      key: id,\n      marca: marca,\n      modelo: modelo,\n      stock: dev_stock,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }))), productSelect.length > 0 ? React.createElement(Button, {\n    className: \"close\",\n    onClick: e => confirmarPedido(),\n    color: \"vk\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Confirmar \", React.createElement(Icon, {\n    name: \"chevron right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"close\",\n    onClick: e => {\n      setIsclose(!isClose);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Salir \"))))) : React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: React.createElement(Button, {\n      circular: true,\n      color: \"blue\",\n      attached: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Ver Articulos\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Elementos seleccionados para devolver\"), React.createElement(Modal.Content, {\n    scrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Modal.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Table, {\n    singleLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Producto\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Articulos Pendientes:\"), React.createElement(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Cantidad Entregada\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, productSelect.map((item, index) => {\n    const producto = item.producto,\n          stock = item.stock,\n          cantidad = item.cantidad;\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, producto), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, stock), React.createElement(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, cantidad));\n  })))))), React.createElement(Button, {\n    onClick: e => {\n      setIsShowingModal(!isShowingModal);\n      setProductSelect([]);\n    },\n    color: \"red\",\n    circular: true,\n    attached: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Eliminar Articulos\"))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Input, {\n    fluid: true,\n    name: \"encargado\",\n    placeholder: \"Encargado de Devolucion\",\n    onChange: e => setEncargado(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"upload\",\n    onClick: () => fileInputRef.current.click(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: getFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), nameFile))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    name: \"detalle\",\n    placeholder: \"Detalle de la Devolucion\",\n    onChange: e => setDescripcion(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"facebook\",\n    type: \"submit\",\n    size: \"medium\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Agregar\")))));\n}\n\nexport default DevolucionProducto;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/registro/opciones/devolucion/DevolucionProducto.jsx"],"names":["React","useState","useMemo","useEffect","Button","Form","Grid","Input","TextArea","Card","Modal","Header","Table","Icon","Productselect","UserContext","getListaAnalisis","DevolucionProducto","productSelect","setProductSelect","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","encargado","setEncargado","descripcion","setDescripcion","file","setFile","nameFile","setNameFile","providerValue","fileInputRef","createRef","response","e","console","error","getFile","target","files","name","handleSubmit","evt","alert","confirmarPedido","length","map","producto","index","stock","marca","modelo","id","disponible","dev_stock","Number","textAlign","item","cantidad","value","current","click"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,IAA9C,EAAmDC,KAAnD,EAA0DC,MAA1D,EAAiEC,KAAjE,EAAwEC,IAAxE,QAAoF,mBAApF;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,SAASC,kBAAT,GAA8B;AAAA,oBACgBhB,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACnBiB,aADmB;AAAA,QACJC,gBADI,kBAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAV0B,qBAYQlB,QAAQ,CAAC,EAAD,CAZhB;AAAA;AAAA,QAYnBmB,SAZmB;AAAA,QAYRC,YAZQ;;AAAA,qBAakBpB,QAAQ,CAAC,IAAD,CAb1B;AAAA;AAAA,QAanBqB,cAbmB;AAAA,QAaHC,iBAbG;;AAAA,qBAcItB,QAAQ,CAAC,KAAD,CAdZ;AAAA;AAAA,QAcnBuB,OAdmB;AAAA,QAcVC,UAdU;;AAAA,qBAeQxB,QAAQ,CAAC,EAAD,CAfhB;AAAA;AAAA,QAenByB,SAfmB;AAAA,QAeRC,YAfQ;;AAAA,sBAgBY1B,QAAQ,CAAC,EAAD,CAhBpB;AAAA;AAAA,QAgBnB2B,WAhBmB;AAAA,QAgBNC,cAhBM;;AAAA,sBAiBF5B,QAAQ,CAAC,EAAD,CAjBN;AAAA;AAAA,QAiBnB6B,IAjBmB;AAAA,QAiBbC,OAjBa;;AAAA,sBAkBM9B,QAAQ,CAAC,EAAD,CAlBd;AAAA;AAAA,QAkBnB+B,QAlBmB;AAAA,QAkBTC,WAlBS;;AAmB1B,QAAMC,aAAa,GAAGhC,OAAO,CAAC,OAAO;AAAEgB,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAP,CAAD,EAA6C,CAACD,aAAD,EAAgBC,gBAAhB,CAA7C,CAA7B;AACA,QAAMgB,YAAY,GAAGnC,KAAK,CAACoC,SAAN,EAArB;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,kBAAkB;AACf,UAAI;AACAa,QAAAA,gBAAgB,CAAEqB,QAAD,IAAc;AAC3BhB,UAAAA,YAAY,CAACgB,QAAD,CAAZ;AACH,SAFe,CAAhB;AAGH,OAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,KARD,IADY,CASP;;AACR,GAVQ,EAUN,EAVM,CAAT;;AAaA,QAAMG,OAAO,GAAGH,CAAC,IAAI;AACjBP,IAAAA,OAAO,CAACO,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAV,IAAAA,WAAW,CAACK,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACH,GAHD;;AAIA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1BC,IAAAA,KAAK,CAACrB,SAAS,GAACE,WAAV,GAAsBE,IAAvB,CAAL;AACH,GAFD;;AAGA,QAAMkB,eAAe,GAAIF,GAAD,IAAS;AAE7B,QAAK5B,aAAa,CAAC+B,MAAd,GAAuB,CAA5B,EAAiC;AAC7B1B,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAG,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;AACJ,GAND;;AAQA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMZ,cAAc,GACZ,oBAAE,KAAF;AAAQ,IAAA,IAAI,EAAEE,OAAd;AAAuB,IAAA,OAAO,EAAE,oBAAE,MAAF;AAAS,MAAA,OAAO,EAAEc,CAAC,IAAIb,UAAU,CAAC,CAACD,OAAF,CAAjC;AAA6C,MAAA,KAAK,MAAlD;AAAmD,MAAA,KAAK,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhC;AAAmI,IAAA,IAAI,EAAC,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEQ,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ,CADJ,EASI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,CAAC8B,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA,UACxBC,KADwB,GACiBF,QADjB,CACxBE,KADwB;AAAA,UACjBC,KADiB,GACiBH,QADjB,CACjBG,KADiB;AAAA,UACVC,MADU,GACiBJ,QADjB,CACVI,MADU;AAAA,UACFC,EADE,GACiBL,QADjB,CACFK,EADE;AAAA,UACEC,UADF,GACiBN,QADjB,CACEM,UADF;AAEhC,QAAIC,SAAS,GAAGC,MAAM,CAACN,KAAD,CAAN,GAAgBM,MAAM,CAACF,UAAD,CAAtC;AACA,WACI,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,EAApB;AAAwB,MAAA,KAAK,EAAEF,KAA/B;AAAsC,MAAA,MAAM,EAAEC,MAA9C;AAAsD,MAAA,KAAK,EAAEG,SAA7D;AAAwE,MAAA,EAAE,EAAEF,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GANA,CADL,CATJ,CAFR,EAqBStC,aAAa,CAAC+B,MAAd,GAAuB,CAAvB,GAA2B,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEX,CAAC,IAAIU,eAAe,EAAvD;AAA2D,IAAA,KAAK,EAAC,IAAjE;AAAsE,IAAA,QAAQ,MAA9E;AAA+E,IAAA,IAAI,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACd,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAA3B,GACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtB/D,EAuBQ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEV,CAAC,IAAI;AAACb,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAAsBL,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAqB,KAApF;AAAsF,IAAA,KAAK,EAAC,KAA5F;AAAkG,IAAA,QAAQ,MAA1G;AAA2G,IAAA,IAAI,EAAC,QAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBR,CADJ,CADJ,CAFJ,CADY,GAmChB;AAAK,IAAA,KAAK,EAAE;AAACyC,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEY,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,MAAvB;AAA8B,MAAA,QAAQ,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,SAAS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAkB,IAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,CADJ,CADJ,EAQI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH1C,aAAa,CAACgC,GAAd,CAAkB,CAACW,IAAD,EAAOT,KAAP,KAAiB;AAAA,UACxBD,QADwB,GACMU,IADN,CACxBV,QADwB;AAAA,UACdE,KADc,GACMQ,IADN,CACdR,KADc;AAAA,UACPS,QADO,GACMD,IADN,CACPC,QADO;AAEhC,WACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaX,QAAb,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCE,KAAjC,CAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCS,QAAjC,CAHJ,CADJ;AAOH,GATA,CADG,CARJ,CADJ,CADJ,CAFJ,CAFZ,EA+BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGxB,CAAC,IAAI;AAACf,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AAAoCH,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AAAuB,KAAnF;AAAsF,IAAA,KAAK,EAAC,KAA5F;AAAkG,IAAA,QAAQ,MAA1G;AAA2G,IAAA,QAAQ,EAAC,OAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/BJ,CApCJ,CADJ,EAwEI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,WAAW,EAAC,yBAA1C;AAAoE,IAAA,QAAQ,EAAEmB,CAAC,IAAIX,YAAY,CAACW,CAAC,CAACI,MAAF,CAASqB,KAAV,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxEJ,EA4EI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM5B,YAAY,CAAC6B,OAAb,CAAqBC,KAArB,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,GAAG,EAAE9B,YAAZ;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,MAAM,MAA5C;AAA6C,IAAA,QAAQ,EAAEM,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKT,QAHL,CA5EJ,CADJ,CADJ,EAqFI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,SAAf;AAAyB,IAAA,WAAW,EAAC,0BAArC;AAAgE,IAAA,QAAQ,EAAEM,CAAC,IAAIT,cAAc,CAACS,CAAC,CAACI,MAAF,CAASqB,KAAV,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,OAAO,EAAElB,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,CArFJ,CADA,CADJ;AAkGH;;AACD,eAAe5B,kBAAf","sourcesContent":["import React, { useState, useMemo, useEffect} from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card,Modal, Header,Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ListaProductoDevolucion'\nimport { UserContext } from '../UseContext';\nimport { getListaAnalisis } from '../../../firebase';\n\nfunction DevolucionProducto() {\n    const [productSelect, setProductSelect] = useState([]);\n    // const [productos] = useState([\n    //     { id: 0, stock: 5, name: 'Arduino' },\n    //     { id: 1, stock: 7, name: 'Impresora' },\n    //     { id: 2, stock: 12, name: 'Sensor Ultrasonido' },\n    //     { id: 3, stock: 32, name: 'Led Rojo' },\n    //     { id: 4, stock: 50, name: 'Resistencias' },\n    //     { id: 37, stock: 50, name: 'Resistencias' },\n    //     { id: 8, stock: 50, name: 'Resistencias' },\n    //     { id: 9, stock: 10, name: 'Protoboard' }]);\n\n    const [productos, setProductos] = useState([])\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect}), [productSelect, setProductSelect]);\n    const fileInputRef = React.createRef();\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaAnalisis((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const handleSubmit = (evt) => {\n        alert(encargado+descripcion+file)\n    }\n    const confirmarPedido = (evt) => {\n\n        if ( productSelect.length > 0  ) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n        <Card fluid>\n            <Card.Content>\n                <Grid columns=\"equal\">\n                    <Grid.Column>\n                        { isShowingModal ?\n                            < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                <Modal.Header>Devolucion Producto</Modal.Header>\n                                <Modal.Content >\n                                    <Modal.Description>\n                                        <Form>\n                                            <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Producto  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Pendientes</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, modelo, id, disponible } = producto\n                                                            let dev_stock = Number(stock) - Number(disponible)\n                                                            return (\n                                                                <Productselect key={id} marca={marca} modelo={modelo} stock={dev_stock} id={id} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div/> }\n                                                <Button className=\"close\" onClick={e => {setIsclose(!isClose); setProductSelect([])}} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                        </Form>\n                                    </Modal.Description>\n                                </Modal.Content>\n                            </Modal >\n                        : \n                        <div style={{textAlign:\"center\"}} >\n                        \n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para devolver</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Producto</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Articulos Pendientes:</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Entregada</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                {productSelect.map((item, index) => {\n                                                    const { producto, stock, cantidad } = item\n                                                    return (\n                                                        <Table.Row>\n                                                            <Table.Cell>{producto}</Table.Cell>\n                                                            <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                            <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                        </Table.Row>\n                                                    )\n                                                })\n                                                }\n                                                 </Table.Body>\n                                                </Table>\n                                        </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                            <Button onClick={ e => {setIsShowingModal(!isShowingModal); setProductSelect([]); }}  color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                        </div>\n                    }\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Input fluid name=\"encargado\" placeholder=\"Encargado de Devolucion\" onChange={e => setEncargado(e.target.value)} />\n                    </Grid.Column>\n\n                    <Grid.Column width={1}>\n                        <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                        <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                        {nameFile}\n                    </Grid.Column>\n                </Grid>\n            </Card.Content>\n            <Form>\n                <Card.Content extra>\n                    <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                    <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                        Agregar\n                        </Button>\n                </Card.Content>\n            </Form>\n        </Card>\n        </UserContext.Provider>\n    );\n}\nexport default DevolucionProducto;"]},"metadata":{},"sourceType":"module"}