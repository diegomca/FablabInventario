{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/graficos/Lines/Line.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport config from './ConfigLine';\nimport '../Chart.css';\nimport { getTipoRegistrovsCantidad } from '../../firebase';\nimport { Header } from 'semantic-ui-react';\n\nfunction Grafico() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        datos = _useState2[0],\n        setdatos = _useState2[1];\n\n  var tempAño = new Date();\n\n  const _useState3 = useState(tempAño.getFullYear),\n        _useState4 = _slicedToArray(_useState3, 2),\n        año = _useState4[0],\n        setAño = _useState4[1];\n\n  useEffect(() => {\n    getTipoRegistrovsCantidad(año, resp => {\n      setdatos(resp);\n    });\n  }, []);\n  useEffect(() => {//cambiar el año\n  }, []);\n  const data = [{\n    \"id\": \"Registros\",\n    \"color\": \"hsl(352, 70%, 50%)\",\n    \"data\": datos.map(value => {\n      return value;\n    })\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Tipo de Registro vs Cantidad por a\\xF1o\"), React.createElement(\"div\", {\n    class: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ResponsiveLine, {\n    data: data,\n    margin: config.margin,\n    xScale: {\n      type: 'point'\n    },\n    yScale: {\n      type: 'linear',\n      stacked: true,\n      min: 'auto',\n      max: 'auto'\n    },\n    curve: \"monotoneX\",\n    axisTop: null,\n    axisRight: null,\n    axisBottom: config.axisBottom,\n    axisLeft: config.axisLeft,\n    colors: {\n      scheme: 'category10'\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor',\n      modifiers: []\n    },\n    pointLabel: \"y\",\n    pointLabelYOffset: -12,\n    areaOpacity: 0,\n    enableSlices: \"x\",\n    useMesh: true,\n    legends: config.legends,\n    animate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}\n\nexport default Grafico;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/graficos/Lines/Line.jsx"],"names":["React","useState","useEffect","ResponsiveLine","config","getTipoRegistrovsCantidad","Header","Grafico","datos","setdatos","tempAño","Date","getFullYear","año","setAño","resp","data","map","value","margin","type","stacked","min","max","axisBottom","axisLeft","scheme","theme","from","modifiers","legends"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;AACA,SAASC,yBAAT,QAA0C,gBAA1C;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,SAASC,OAAT,GAAmB;AAAA,oBAEWN,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,QAERO,KAFQ;AAAA,QAEDC,QAFC;;AAGf,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;;AAHe,qBAIOV,QAAQ,CAACS,OAAO,CAACE,WAAT,CAJf;AAAA;AAAA,QAIRC,GAJQ;AAAA,QAIHC,MAJG;;AAKfZ,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,yBAAyB,CAACQ,GAAD,EAAOE,IAAD,IAAU;AACrCN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACH,KAFwB,CAAzB;AAGH,GALQ,EAKN,EALM,CAAT;AAMAb,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMc,IAAI,GAAG,CAAC;AACV,UAAM,WADI;AAEV,aAAS,oBAFC;AAGV,YAAQR,KAAK,CAACS,GAAN,CAAWC,KAAD,IAAW;AACzB,aAAOA,KAAP;AACH,KAFO;AAHE,GAAD,CAAb;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEF,IADV;AAEI,IAAA,MAAM,EAAEZ,MAAM,CAACe,MAFnB;AAGI,IAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAHZ;AAII,IAAA,MAAM,EAAE;AAAEA,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,IAA3B;AAAiCC,MAAAA,GAAG,EAAE,MAAtC;AAA8CC,MAAAA,GAAG,EAAE;AAAnD,KAJZ;AAKI,IAAA,KAAK,EAAC,WALV;AAMI,IAAA,OAAO,EAAE,IANb;AAOI,IAAA,SAAS,EAAE,IAPf;AAQI,IAAA,UAAU,EAAEnB,MAAM,CAACoB,UARvB;AASI,IAAA,QAAQ,EAAEpB,MAAM,CAACqB,QATrB;AAUI,IAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAVZ;AAWI,IAAA,SAAS,EAAE,EAXf;AAYI,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAZhB;AAaI,IAAA,gBAAgB,EAAE,CAbtB;AAcI,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAdtB;AAeI,IAAA,UAAU,EAAC,GAff;AAgBI,IAAA,iBAAiB,EAAE,CAAC,EAhBxB;AAiBI,IAAA,WAAW,EAAE,CAjBjB;AAkBI,IAAA,YAAY,EAAC,GAlBjB;AAmBI,IAAA,OAAO,EAAE,IAnBb;AAoBI,IAAA,OAAO,EAAEzB,MAAM,CAAC0B,OApBpB;AAqBI,IAAA,OAAO,EAAE,IArBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AA8BH;;AAED,eAAevB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ResponsiveLine } from '@nivo/line'\nimport config from './ConfigLine'\nimport '../Chart.css'\nimport { getTipoRegistrovsCantidad } from '../../firebase'\nimport { Header } from 'semantic-ui-react'\n\nfunction Grafico() {\n\n    const [datos, setdatos] = useState([])\n    var tempAño = new Date();\n    const [año, setAño] = useState(tempAño.getFullYear)\n    useEffect(() => {\n\n        getTipoRegistrovsCantidad(año, (resp) => {\n            setdatos(resp)\n        });\n    }, [])\n    useEffect(() => {\n        //cambiar el año\n    }, [])\n\n    const data = [{\n        \"id\": \"Registros\",\n        \"color\": \"hsl(352, 70%, 50%)\",\n        \"data\": datos.map((value) => {\n            return value;\n        })\n    }]\n    return (\n        <div>\n            <Header as='h1'>Tipo de Registro vs Cantidad por año</Header>\n            <div class=\"chart\" >\n                <ResponsiveLine\n                    data={data}\n                    margin={config.margin}\n                    xScale={{ type: 'point' }}\n                    yScale={{ type: 'linear', stacked: true, min: 'auto', max: 'auto' }}\n                    curve=\"monotoneX\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={config.axisBottom}\n                    axisLeft={config.axisLeft}\n                    colors={{ scheme: 'category10' }}\n                    pointSize={10}\n                    pointColor={{ theme: 'background' }}\n                    pointBorderWidth={2}\n                    pointBorderColor={{ from: 'serieColor', modifiers: [] }}\n                    pointLabel=\"y\"\n                    pointLabelYOffset={-12}\n                    areaOpacity={0}\n                    enableSlices=\"x\"\n                    useMesh={true}\n                    legends={config.legends}\n                    animate={true}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Grafico"]},"metadata":{},"sourceType":"module"}