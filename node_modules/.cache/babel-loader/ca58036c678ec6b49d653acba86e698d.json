{"ast":null,"code":"import _slicedToArray from \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/home/Home.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react'; //import { Link } from 'react-router-dom'\n\nimport { Container, Header, Segment, Grid, Divider, Icon, Button, Card, Statistic, Dimmer, Loader } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu';\nimport Headertop from '../componentes/pagHeader';\nimport entregado from './imagenes/entregadeproductos.png';\nimport actualizar from './imagenes/actualizarstock.png';\nimport devolucion from './imagenes/devoluciondeproducto.png';\nimport agregado from './imagenes/productoagregado.png';\nimport eliminado from './imagenes/productoeliminado.png';\nimport { getListaRegistroHome } from '../firebase';\n\nfunction Home() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ultimosRegistros = _useState2[0],\n        setultimosRegistros = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pendientesDevolucion = _useState4[0],\n        setpendientesDevolucion = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cantidadRegistrosAnual = _useState6[0],\n        setcantidadRegistrosAnual = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        entregaProductosMensual = _useState8[0],\n        setentregaProductosMensual = _useState8[1];\n\n  useEffect(() => {\n    getListaRegistroHome(response => {\n      setultimosRegistros(response);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Headertop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Inventario Fablab UV.\"), React.createElement(Segment, {\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 2,\n    stackable: true,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"-\"), React.createElement(Grid.Row, {\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"product hunt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \"Listado con n\\xFAmeros UV\"), React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Ver\")), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"Lista de Registros\"), React.createElement(Button, {\n    href: \"/registro\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Registros\"))))), React.createElement(Grid, {\n    columns: \"equal\",\n    divided: true,\n    padded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Productos Pendientes Devoluci\\xF3n\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, pendientesDevolucion))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Cantidad Registro Anual\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, cantidadRegistrosAnual))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Statistic.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Entregas de productos este mes\"), React.createElement(Statistic.Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, entregaProductosMensual))))), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Ultimos Registros realizados\"), React.createElement(Grid, {\n    columns: \"equal\",\n    divided: true,\n    padded: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, ultimosRegistros.length === 0 && React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Cargando datos\")), ultimosRegistros.map(datos => {\n    var foto = null;\n\n    if (datos.peticion === 'Entrega de producto') {\n      foto = entregado;\n    }\n\n    if (datos.peticion === 'Nuevo producto') {\n      foto = agregado;\n    }\n\n    if (datos.peticion === 'Devolucion de producto') {\n      foto = devolucion;\n    }\n\n    if (datos.peticion === 'Actualizar stock') {\n      foto = actualizar;\n    }\n\n    if (datos.peticion === 'Producto removido') {\n      foto = eliminado;\n    }\n\n    var date = new Date(datos.fecha);\n    var fechaString = \"\";\n    var months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    fechaString = day + '/' + month + '/' + year;\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card, {\n      image: foto,\n      header: datos.encargado,\n      meta: fechaString,\n      description: datos.comentario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }))), React.createElement(Segment, {\n    placeholder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"pdf file outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), \"No documents are listed for this customer.\"), React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Add Document\"))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/diego/Documents/8_semestre/Taller-de-Aplicaciones/inventarioFablab/src/home/Home.jsx"],"names":["React","Fragment","useState","useEffect","Container","Header","Segment","Grid","Divider","Icon","Button","Card","Statistic","Dimmer","Loader","Menu","Headertop","entregado","actualizar","devolucion","agregado","eliminado","getListaRegistroHome","Home","ultimosRegistros","setultimosRegistros","pendientesDevolucion","setpendientesDevolucion","cantidadRegistrosAnual","setcantidadRegistrosAnual","entregaProductosMensual","setentregaProductosMensual","response","length","map","datos","foto","peticion","date","Date","fecha","fechaString","months_arr","year","getFullYear","month","getMonth","day","getDate","encargado","comentario"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n//import { Link } from 'react-router-dom'\nimport { Container, Header, Segment, Grid, Divider, Icon, Button, Card, Statistic, Dimmer, Loader } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader'\nimport entregado from './imagenes/entregadeproductos.png'\nimport actualizar from './imagenes/actualizarstock.png'\nimport devolucion from './imagenes/devoluciondeproducto.png'\nimport agregado from './imagenes/productoagregado.png'\nimport eliminado from './imagenes/productoeliminado.png'\nimport { getListaRegistroHome } from '../firebase';\n\n\n\nfunction Home() {\n\n    const [ultimosRegistros, setultimosRegistros] = useState([])\n    const [pendientesDevolucion, setpendientesDevolucion] = useState(0)\n    const [cantidadRegistrosAnual, setcantidadRegistrosAnual] = useState(0)\n    const [entregaProductosMensual, setentregaProductosMensual] = useState(0)\n\n    useEffect(() => {\n        getListaRegistroHome(response => {\n            setultimosRegistros(response)\n        })\n    }, [])\n\n    return (\n        <div>\n            <Fragment>\n                <Menu />\n                <Container>\n                    <Headertop />\n                    <div>\n                        <Header size=\"huge\">Inventario Fablab UV.</Header>\n                        <Segment placeholder>\n                            <Grid columns={2} stackable textAlign='center'>\n                                <Divider vertical>-</Divider>\n                                <Grid.Row verticalAlign='middle'>\n                                    <Grid.Column>\n                                        <Header icon>\n                                            <Icon name='product hunt' />\n                                            Listado con números UV\n                                            </Header>\n                                        <Button primary>Ver</Button>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <Header icon>\n                                            <Icon name='world' />\n                                            Lista de Registros\n                                            </Header>\n                                        <Button href=\"/registro\" primary>Registros</Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Segment>\n                        <Grid columns='equal' divided padded>\n                            <Grid.Row textAlign='center'>\n                                <Grid.Column>\n                                    <Statistic size='huge'>\n                                        <Statistic.Label>Productos Pendientes Devolución</Statistic.Label>\n                                        <Statistic.Value>{pendientesDevolucion}</Statistic.Value>\n                                    </Statistic>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Statistic size='huge'>\n                                        <Statistic.Label>Cantidad Registro Anual</Statistic.Label>\n                                        <Statistic.Value>{cantidadRegistrosAnual}</Statistic.Value>\n                                    </Statistic>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Statistic size='huge'>\n                                        <Statistic.Label>Entregas de productos este mes</Statistic.Label>\n                                        <Statistic.Value>{entregaProductosMensual}</Statistic.Value>\n                                    </Statistic>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                        <Header>Ultimos Registros realizados</Header>\n                        <Grid columns='equal' divided padded>\n                            <Grid.Row textAlign='center'>\n                                {\n                                    ultimosRegistros.length === 0 && \n                                    <Dimmer active inverted>\n                                        <Loader inverted>Cargando datos</Loader>\n                                    </Dimmer>\n                                }\n                                {\n                                    ultimosRegistros.map(datos => {\n                                        var foto = null;\n                                        if (datos.peticion === 'Entrega de producto') {\n                                            foto = entregado;\n                                        } if (datos.peticion === 'Nuevo producto') {\n                                            foto = agregado;\n                                        } if (datos.peticion === 'Devolucion de producto') {\n                                            foto = devolucion;\n                                        } if (datos.peticion === 'Actualizar stock') {\n                                            foto = actualizar;\n                                        } if (datos.peticion === 'Producto removido') {\n                                            foto = eliminado;\n                                        }\n\n                                        var date = new Date(datos.fecha);\n                                        var fechaString = \"\";\n                                        var months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n                                        var year = date.getFullYear();\n                                        var month = months_arr[date.getMonth()];\n                                        var day = date.getDate();\n                                        fechaString = day + '/' + month + '/' + year;\n\n                                        return (\n                                            <Grid.Column>\n                                                <Segment  >\n                                                    <Card\n                                                        image={foto}\n                                                        header={datos.encargado}\n                                                        meta={fechaString}\n                                                        description={datos.comentario}\n                                                    />\n                                                </Segment>\n                                            </Grid.Column>\n                                        )\n                                    })\n                                }\n\n                            </Grid.Row>\n                        </Grid>\n                        <Segment placeholder>\n                            <Header icon>\n                                <Icon name='pdf file outline' />\n                                No documents are listed for this customer.\n                            </Header>\n                            <Button primary>Add Document</Button>\n                        </Segment>\n                    </div>\n                </Container>\n            </Fragment>\n            <br></br>\n            <br></br>\n        </div>\n    );\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}