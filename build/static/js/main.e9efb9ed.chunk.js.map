{"version":3,"sources":["img/Logo-Fablab.png","img/login/slide-img-1.jpg","img/login/slide-img-2.jpg","img/login/slide-img-3.png","img/perfil.jpg","login/Barrasuperior.jsx","firebase.js","login/Login.jsx","componentes/Menu.jsx","componentes/comp_pagHeader/profile.jsx","componentes/pagHeader.jsx","registro/opciones/ListarRegistros.jsx","registro/Registro_divide.jsx","registro/opciones/UseContext.jsx","registro/opciones/actualizar/ProductActualizar.jsx","registro/opciones/actualizar/ActualizaStock.jsx","registro/opciones/agregar/AgregarProducto.jsx","registro/opciones/devolucion/ListaProductoDevolucion.jsx","registro/opciones/devolucion/DevolucionProducto.jsx","registro/opciones/entrega/ProductSelect.jsx","registro/opciones/entrega/EntregaProducto.jsx","registro/opciones/eliminar/ProductoEliminar.jsx","registro/opciones/eliminar/EliminarProducto.jsx","registro/SubirRegistro.jsx","registro/Registro.jsx","productos/ListarTabla.jsx","productos/Productos.jsx","home/Home.jsx","datos_predictivos/Datos.jsx","graficos/Barras/DataBar.js","graficos/Barras/ConfigBar.js","graficos/Barras/Bar.jsx","graficos/Lines/DataLine.js","graficos/Lines/ConfigLine.js","graficos/Lines/Line.jsx","graficos/Pies/Pie.jsx","graficos/Tab/Tab.js","graficos/Grafico.jsx","componentes/PrivateRoute.jsx","componentes/SelectRoute.jsx","componentes/Error404.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Barrasuperior","Menu","Container","Item","as","header","Image","size","src","logo","circular","firebaseConf","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getListaProducto","callback","temp","database","ref","child","orderByChild","once","snapshot","forEach","datos","data","codigo","val","marca","modelo","stock","disponible","ubicacion","key","push","getListaRegistro","firestore","collection","orderBy","onSnapshot","querySnapshot","reverse","setRegistro","data_subir","add","then","catch","updateProducto","ruta","String","update","updateProductoStock","new_stock","new_disp","setProducto","removeProducto","remove","ingresarLogin","userNick","userPassword","auth","signInWithEmailAndPassword","result","window","localStorage","setItem","Math","random","toString","substr","location","Login","useState","setUserNick","setUserPassword","errorCuenta","setError","errorUser","setErrorUser","errorpassport","setErrorPassport","className","images","image2","image1","image3","duration","transition","Grid","textAlign","verticalAlign","Column","style","maxWidth","Message","negative","Header","Segment","Form","Input","error","fluid","icon","iconPosition","placeholder","value","onChange","e","target","type","Button","color","onClick","evt","preventDefault","resp","console","log","MenuFablab","href","getItem","onSelect","selected","Toggle","Nav","defaultSelected","to","eventKey","Icon","name","Component","DropdownSecion","trigger","avatar","perfil","Dropdown","options","text","pointing","clear","PagHeader","position","ListarRegistros","registros","map","registro","index","peticion","encargado","fecha","comentario","lista","fechastr","seconds","date","Date","year","getFullYear","month","getMonth","getDate","getFecha","columns","Label","ribbon","Modal","Content","Description","Table","singleLine","Row","HeaderCell","Body","item","cantidad","Cell","Number","Extra","RegistroCard","setRegistros","useEffect","a","response","paginaActual","setPaginaActual","indiceUltimoPost","indicePrimerPost","publicacionActual","slice","Group","divided","Pagination","defaultActivePage","activePage","firstItem","lastItem","secondary","totalPages","length","onPageChange","pageInfo","UserContext","createContext","ListaActualizarStock","id","useContext","productSelect","setProductSelect","banderaSelect","setBanderaSelect","stockBanderaCero","setStockBanderaCero","inputRef","React","createRef","defaultValue","articulo","stockDisponible","validacion","current","identificador","producto","splice","eliminar","ActualizarStock","productos","setProductos","isShowingModal","setIsShowingModal","isClose","setIsclose","descripcion","setDescripcion","setFile","nameFile","setNameFile","providerValue","useMemo","fileInputRef","Provider","Card","open","celled","attached","scrolling","width","click","hidden","files","extra","TextArea","new_disponible","wea","temp_subir","archivo","now","alert","DevolucionProducto","setCodigoUV","setMarca","setModelo","setStock","setUbicacion","detalle","setDetalle","productSelectLista","ListaDevolucion","stockBandera","setStockBandera","setEncargado","dev_stock","ListaProductoEntrega","total","EntregaProducto","temp_lista","ListaEliminar","EliminarProducto","Crum","isEntrega","setEntrega","isDevolucion","setIsDevolucion","isActualizar","setIsActualizar","isAgregar","setIsAgregar","isEliminar","setIsEliminar","eleccion","setEleccion","centered","Registro","Responsive","SubirRegistro","ListarTabla","Productos","home","keys","margin","top","right","bottom","left","defs","background","padding","stagger","rotation","lineWidth","spacing","fill","match","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","Bar","class","config","indexBy","groupMode","colors","colorBy","borderWidth","borderColor","from","modifiers","axisTop","axisRight","labelSkipWidth","labelSkipHeight","labelTextColor","animate","onMouseOver","props","onMouseOverCallback","onMouseOut","onMouseOutCallback","motionStiffness","motionDamping","orient","symbolShape","itemTextColor","itemBackground","Grafico","xScale","yScale","stacked","min","max","curve","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","areaOpacity","enableSlices","useMesh","innerRadius","padAngle","cornerRadius","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","panes","menuItem","render","Tab","Pane","TabTest","menu","PrivateRoute","component","rest","pathname","state","SelectRoute","Error404","App","path","exact","Home","Graficos","Datos","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9efb9ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo-Fablab.493b8e2e.png\";","module.exports = __webpack_public_path__ + \"static/media/slide-img-1.ca460e83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-img-2.ed472713.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-img-3.a9a0e39f.png\";","module.exports = __webpack_public_path__ + \"static/media/perfil.547bdf44.jpg\";","import React from 'react'\nimport { Container, Image, Menu } from 'semantic-ui-react';\nimport logo from '../img/Logo-Fablab.png';\n\nconst Barrasuperior = () => {\n    return (\n        <div>\n            <Menu>\n                <Container>\n                    <Menu.Item as=\"a\" header>\n                        <Image\n                            size=\"small\"\n                            src={logo}\n                            circular\n                        />\n                    </Menu.Item>\n                </Container>\n            </Menu>\n        </div>\n    )\n}\n\nexport default Barrasuperior\n","import firebase from 'firebase';\n\nconst config = {\n\n    apiKey: \"AIzaSyApwjHjFIfP0VmtAqFH-Cp5Kha2GnD6q3E\",\n    authDomain: \"inventario-fablabuv.firebaseapp.com\",\n    databaseURL: \"https://inventario-fablabuv.firebaseio.com\",\n    projectId: \"inventario-fablabuv\",\n    storageBucket: \"inventario-fablabuv.appspot.com\",\n    messagingSenderId: \"1070405211534\",\n    appId: \"1:1070405211534:web:d7275629df2fb90bc900df\",\n    measurementId: \"G-PG0YWD8M1Z\"\n\n}\n\nconst firebaseConf = firebase.initializeApp(config);\nexport default firebaseConf;\n\n\nexport const getListaProducto = (callback) => {\n    const temp = [];\n    firebaseConf.database().ref().child(\"productos\").orderByChild(\"marca\").once(\"value\", snapshot => {\n        snapshot.forEach(datos => {\n            const data = { codigo: datos.val().codigo, marca: datos.val().marca, modelo: datos.val().modelo, stock: datos.val().stock, disponible: datos.val().disponible, ubicacion: datos.val().ubicacion, key: datos.key }\n            temp.push(data);\n        })\n        callback(temp)\n    });\n};\n\nexport const getListaRegistro = (callback) => {\n    const temp = [];\n    firebaseConf.firestore().collection('registros').orderBy('fecha').onSnapshot(querySnapshot => {\n        querySnapshot.forEach(data => {\n            temp.push(data.data())\n        })\n        callback(temp.reverse());\n    })\n};\n\nexport const setRegistro = (data_subir, callback) => {\n    firebaseConf.firestore().collection('registros').add(data_subir).then(() => {\n        callback(true)\n    }).catch(() => {\n        callback(false)\n    })\n};\n\nexport const updateProducto = (ruta, datos) => {\n    firebaseConf.database().ref().child('productos').child(String(ruta)).update({\n        \"disponible\": datos\n    }).then(() => {\n    }).catch(() => {\n    })\n};\n\nexport const updateProductoStock = (new_stock, new_disp, ruta) => {\n    firebaseConf.database().ref().child('productos').child(String(ruta)).update({\n        \"disponible\": new_disp,\n        \"stock\": new_stock\n    }).then(() => {\n    }).catch(() => {\n    })\n};\n\nexport const setProducto = (datos, callback) => {\n\n    firebaseConf.database().ref().child('productos').push(datos).then(() => callback(true)).catch(() => { callback(false) })\n};\n\nexport const removeProducto = (ruta) => {\n\n    firebaseConf.database().ref().child('productos').child(String(ruta)).remove();\n};\n\nexport const ingresarLogin = (userNick, userPassword, callback) => {\n\n    firebaseConf.auth().signInWithEmailAndPassword(userNick, userPassword).then(function (result) {\n        window.localStorage.setItem('token_inventarioUV', Math.random().toString(36).substr(2) + Math.random().toString(36).substr(2));\n        window.localStorage.setItem('user_inventarioUV', userNick)\n        if (userNick === 'admin@inventariofablab.uv.cl') {\n            window.localStorage.setItem('permisos_inventarioUV', '0')\n        }\n        if (userNick === 'visita@inventariofablab.uv.cl') {\n            window.localStorage.setItem('permisos_inventarioUV', '2')\n        }\n        if (userNick === 'ayudantes@inventariofablab.uv.cl') {\n            window.localStorage.setItem('permisos_inventarioUV', '1')\n        }\n        window.location = '/home';\n    }).catch(() => {\n        callback(false)\n    })\n};","import React, { useState } from 'react';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport Barrasuperior from './Barrasuperior'\nimport BackgroundSlider from 'react-background-slider'\nimport image1 from '../img/login/slide-img-1.jpg'\nimport image2 from '../img/login/slide-img-2.jpg'\nimport image3 from '../img/login/slide-img-3.png'\nimport './Login.css'\nimport { ingresarLogin } from '../firebase';\n\n\nfunction Login() {\n\n    const [userNick, setUserNick] = useState(\"\");\n    const [userPassword, setUserPassword] = useState(\"\");\n    const [errorCuenta, setError] = useState(false);\n    const [errorUser, setErrorUser] = useState(false);\n    const [errorpassport, setErrorPassport] = useState(false);\n\n    const getAuth = () => {\n\n        ingresarLogin(userNick, userPassword, (resp) => {\n            if (!resp) {\n                setError(true);\n                console.log('error');\n                setUserPassword('');\n            }\n        })\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (userNick === '' || userPassword === '') {\n            setError(false);\n            if (userNick === '') {\n                setErrorUser(true);\n            } else {\n                setErrorUser(false);\n            }\n            if (userPassword === '') {\n                setErrorPassport(true);\n\n            } else {\n                setErrorPassport(false);\n            }\n        } else {\n            setErrorUser(false);\n            setErrorPassport(false);\n            getAuth();\n        }\n    }\n\n    return (\n        <div>\n            <Barrasuperior />\n            <div className=\"Login\">\n                <BackgroundSlider images={[image2, image1, image3]}\n                    duration={5} transition={2} />\n                <Grid textAlign=\"center\" verticalAlign=\"middle\">\n                    <Grid.Column style={{ maxWidth: 400 }}>\n                        {errorCuenta ? <Message negative><Message.Header>Datos Incorrectos</Message.Header>\n                            <p>Nombre de Usuario o contraseña son invalidas, Intente nuevamente</p>\n                        </Message> : <div></div>}\n                        <Segment>\n                            <Header as=\"h2\" textAlign=\"center\">\n                                Ingreso a Fablab Inventario\n                        </Header>\n                            <Form size=\"large\" >\n                                {errorUser ? <Form.Input\n                                    error\n                                    fluid\n                                    icon=\"user\"\n                                    iconPosition=\"left\"\n                                    placeholder=\"Usuario\"\n                                    value={userNick}\n                                    onChange={e => setUserNick(e.target.value)}\n                                /> : <Form.Input\n                                        fluid\n                                        icon=\"user\"\n                                        iconPosition=\"left\"\n                                        placeholder=\"Usuario\"\n                                        value={userNick}\n                                        onChange={e => setUserNick(e.target.value)}\n                                    />}\n                                {errorpassport ? <Form.Input\n                                    error\n                                    fluid\n                                    icon=\"lock\"\n                                    iconPosition=\"left\"\n                                    placeholder=\"Contraseña\"\n                                    type=\"password\"\n                                    onChange={e => setUserPassword(e.target.value)}\n                                    value={userPassword}\n\n                                /> : <Form.Input\n                                        fluid\n                                        icon=\"lock\"\n                                        iconPosition=\"left\"\n                                        placeholder=\"Contraseña\"\n                                        type=\"password\"\n                                        onChange={e => setUserPassword(e.target.value)}\n                                        value={userPassword}\n\n                                    />}\n                                <Button color=\"instagram\" fluid size=\"large\" type=\"submit\" onClick={handleSubmit} >\n                                    Iniciar Sesión\n                                </Button>\n                            </Form>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </div>\n\n        </div>\n    );\n}\nexport default Login;","import React, { Component } from 'react'\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Icon } from 'semantic-ui-react'\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport \"../App.css\";\nclass MenuFablab extends Component {\n    href = \"/signup\"\n    render() {\n\n        return (\n            <div className=\"Menu\">\n                {window.localStorage.getItem('permisos_inventarioUV') === '0'&& <SideNav\n                    onSelect={(selected) => {\n                    }}>\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"home\">\n                        <LinkContainer to=\"/home\">\n                            <NavItem eventKey=\"home\" >\n                                <NavIcon >\n                                    <Icon name=\"home\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Home\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/productos\">\n                            <NavItem eventKey=\"productos\">\n                                <NavIcon >\n                                    <Icon name='product hunt' size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Lista de Productos\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/registro\">\n                            <NavItem eventKey=\"registro\">\n                                <NavIcon >\n                                    <Icon name=\"registered outline\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Registro Actividades\n                            </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/graficos\">\n                            <NavItem eventKey=\"graficos\">\n                                <NavIcon >\n                                    <Icon name=\"line graph\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Graficos\n                            </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/datos\">\n                            <NavItem eventKey=\"datos\">\n                                <NavIcon >\n                                    <Icon name=\"angle double right\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Datos Predictivos\n                            </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                    </SideNav.Nav>\n                </SideNav>}\n                {window.localStorage.getItem('permisos_inventarioUV') === '1' && <SideNav\n                    onSelect={(selected) => {\n                    }}>\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"home\">\n                        <LinkContainer to=\"/home\">\n                            <NavItem eventKey=\"home\" >\n                                <NavIcon >\n                                    <Icon name=\"home\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Home\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/productos\">\n                            <NavItem eventKey=\"productos\">\n                                <NavIcon >\n                                    <Icon name='product hunt' size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Lista de Productos\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/registro\">\n                            <NavItem eventKey=\"registro\">\n                                <NavIcon >\n                                    <Icon name=\"registered outline\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Registro Actividades\n                            </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                    </SideNav.Nav>\n                </SideNav>}\n                {window.localStorage.getItem('permisos_inventarioUV') === '2' && <SideNav\n                    onSelect={(selected) => {\n                    }}>\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"home\">\n                        <LinkContainer to=\"/home\">\n                            <NavItem eventKey=\"home\" >\n                                <NavIcon >\n                                    <Icon name=\"home\" size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Home\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/productos\">\n                            <NavItem eventKey=\"productos\">\n                                <NavIcon >\n                                    <Icon name='product hunt' size=\"big\" />\n                                </NavIcon>\n                                <NavText >\n                                    Lista de Productos\n                                </NavText>\n                            </NavItem>\n                        </LinkContainer>\n                    </SideNav.Nav>\n                </SideNav>}\n            </div>\n        )\n    }\n}\nexport default MenuFablab;\n","import React from 'react';\nimport { Dropdown, Image } from 'semantic-ui-react'\nimport perfil from '../../img/perfil.jpg'\n\nfunction DropdownSecion() {\n\n\n  const trigger = (\n    <span>\n      <Image size=\"mini\" avatar src={perfil} /> {window.localStorage.getItem('user_inventarioUV')}\n    </span>\n  )\n  const cerrarSesion = () => {\n    window.localStorage.clear();\n    window.location = '/login';\n\n  }\n\n  const options = [\n    { key: 'sign-out', text: 'Cerrar Sesión', icon: 'sign out' }\n  ]\n  return (\n    <div>\n      <Dropdown\n        trigger={trigger}\n        options={options}\n        pointing='top left'\n        icon={null}\n        onChange={e => cerrarSesion()}\n      />\n    </div>\n  );\n}\nexport default DropdownSecion;","import React from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\nimport User from './comp_pagHeader/profile'\nimport logo from '../img/Logo-Fablab.png';\n\n\nconst PagHeader = () => (\n  <Menu>\n    <Menu.Menu position=\"left\">\n        <Menu.Item>\n        <Image size=\"small\" src={logo} circular/>\n        </Menu.Item>\n    </Menu.Menu>\n    <Menu.Menu position=\"right\">\n      <Menu.Item>\n          <User/>\n      </Menu.Item>\n    </Menu.Menu>\n\n\n  </Menu>\n)\n\nexport default PagHeader","import React from 'react'\nimport { Item, Label, Header, Segment, Grid, Button, Modal, Table } from 'semantic-ui-react'\n\n\nfunction ListarRegistros({ registros }) {\n\n    var getFecha = (seconds) => {\n        var date = new Date(seconds);\n        var fechaString = \"\";\n        var months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n        var year = date.getFullYear();\n        var month = months_arr[date.getMonth()];\n        var day = date.getDate();\n        fechaString = day + '/' + month + '/' + year;\n        return fechaString\n    }\n\n    return registros.map((registro, index) => {\n        const { peticion, encargado, fecha, comentario, lista } = registro\n        let fechastr = getFecha(fecha);\n\n        return (\n\n\n            <Segment key={index}>\n                <Grid columns=\"equal\" >\n                    <Grid.Column textAlign=\"left\" >\n                        <Header as='h3' textAlign='left'>\n                            {peticion}\n                        </Header>\n                    </Grid.Column>\n                    <Grid.Column  >\n                        <Label as='a' color='orange' ribbon='right'>{fechastr}</Label>\n                    </Grid.Column>\n                </Grid>\n                <Item>\n                    <Grid columns=\"equal\" >\n                        <Grid.Column textAlign=\"left\" >\n                            <Header as=\"h4\">{encargado}</Header>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"right\" >\n                            {\n                                peticion === 'Entrega de producto' &&\n                                <Modal trigger={<Button>Detalle</Button>}>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Table singleLine>\n                                                <Table.Header>\n                                                    <Table.Row>\n                                                        <Table.HeaderCell  textAlign='center'>Marca</Table.HeaderCell>\n                                                        <Table.HeaderCell  textAlign='center'>Modelo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad Pedida</Table.HeaderCell>\n                                                    </Table.Row>\n                                                </Table.Header>\n                                                <Table.Body>\n                                                    {lista.map((item, index) => {\n                                                        const { marca, modelo, cantidad } = item\n                                                        return (\n                                                            <Table.Row key={index}>\n                                                                <Table.Cell textAlign='center'>{marca}</Table.Cell>\n                                                                <Table.Cell textAlign='center'>{modelo}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                            </Table.Row>\n                                                        )\n                                                    })\n                                                    }\n                                                </Table.Body>\n                                            </Table>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                            }\n                            {\n                                peticion === 'Devolucion de producto' &&\n                                <Modal trigger={<Button>Detalle</Button>}>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Table singleLine>\n                                                <Table.Header>\n                                                    <Table.Row>\n                                                        <Table.HeaderCell  textAlign='center'>Marca</Table.HeaderCell>\n                                                        <Table.HeaderCell  textAlign='center'>Modelo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad devuelta</Table.HeaderCell>\n                                                    </Table.Row>\n                                                </Table.Header>\n                                                <Table.Body>\n                                                    {lista.map((item, index) => {\n                                                        const { marca, modelo, cantidad } = item\n                                                        return (\n                                                            <Table.Row key={index}>\n                                                                <Table.Cell textAlign='center'>{marca}</Table.Cell>\n                                                                <Table.Cell textAlign='center'>{modelo}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                            </Table.Row>\n                                                        )\n                                                    })\n                                                    }\n                                                </Table.Body>\n                                            </Table>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                            }\n                            {\n                                peticion === 'Actualizar stock' &&\n                                <Modal trigger={<Button>Detalle</Button>}>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Table singleLine>\n                                                <Table.Header>\n                                                    <Table.Row>\n                                                        <Table.HeaderCell  textAlign='center'>Marca</Table.HeaderCell>\n                                                        <Table.HeaderCell  textAlign='center'>Modelo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad Agregada</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad Previa</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad Nueva</Table.HeaderCell>\n                                                    </Table.Row>\n                                                </Table.Header>\n                                                <Table.Body>\n                                                    {lista.map((item, index) => {\n                                                        const { marca, modelo, cantidad, stock } = item\n                                                        return (\n                                                            <Table.Row key={index}>\n                                                                <Table.Cell textAlign='center'>{marca}</Table.Cell>\n                                                                <Table.Cell textAlign='center'>{modelo}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{Number(stock)+Number(cantidad)}</Table.Cell>\n                                                            </Table.Row>\n                                                        )\n                                                    })\n                                                    }\n                                                </Table.Body>\n                                            </Table>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                            }\n                            {\n                                peticion === 'Producto removido' &&\n                                <Modal trigger={<Button>Detalle</Button>}>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Table singleLine>\n                                                <Table.Header>\n                                                    <Table.Row>\n                                                        <Table.HeaderCell  textAlign='center'>Marca</Table.HeaderCell>\n                                                        <Table.HeaderCell  textAlign='center'>Modelo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad Total</Table.HeaderCell>\n\n                                                    </Table.Row>\n                                                </Table.Header>\n                                                <Table.Body>\n                                                    {lista.map((item, index) => {\n                                                        const { marca, modelo, stock } = item\n                                                        return (\n                                                            <Table.Row key={index}>\n                                                                <Table.Cell textAlign='center'>{marca}</Table.Cell>\n                                                                <Table.Cell textAlign='center'>{modelo}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                               \n                                                            </Table.Row>\n                                                        )\n                                                    })\n                                                    }\n                                                </Table.Body>\n                                            </Table>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                            }\n\n                            {\n                                peticion === 'Nuevo producto' &&\n                                <Modal trigger={<Button>Detalle</Button>}>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Table singleLine>\n                                                <Table.Header>\n                                                    <Table.Row>\n                                                        <Table.HeaderCell textAlign='center'>Codigo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Marca</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Modelo</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Cantidad</Table.HeaderCell>\n                                                        <Table.HeaderCell textAlign='center'>Ubicación</Table.HeaderCell>                                                        \n                                                    </Table.Row>\n                                                </Table.Header>\n                                                <Table.Body>\n                                                    {lista.map((item, index) => {\n                                                        const { marca, modelo, codigo, ubicacion, stock } = item\n                                                        return (\n                                                            <Table.Row key={index}>\n                                                                <Table.Cell textAlign='center'>{codigo}</Table.Cell>\n                                                                <Table.Cell textAlign='center'>{marca}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{modelo}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                <Table.Cell textAlign='center' >{ubicacion}</Table.Cell>\n                                                            </Table.Row>\n                                                        )\n                                                    })\n                                                    }\n                                                </Table.Body>\n                                            </Table>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                            }\n                            \n\n                        </Grid.Column>\n                    </Grid>\n                    <Item.Description>\n                        {comentario}\n                    </Item.Description>\n                    <Item.Extra>\n                        <Button icon=\"file outline\" ></Button>\n                    </Item.Extra>\n                </Item>\n            </Segment>\n        )\n    })\n}\n\nexport default ListarRegistros\n","import React, { useState, useEffect } from 'react'\nimport { Item, Pagination } from 'semantic-ui-react'\nimport ListaRegistro from './opciones/ListarRegistros'\nimport { getListaRegistro } from '../firebase'\nfunction RegistroCard() {\n    \n    const [registros, setRegistros] = useState([])\n\n        useEffect(() => {\n            (async function () {\n                try {\n                    getListaRegistro((response) => {\n                        setRegistros(response);\n                    });\n                } catch (e) {\n                    console.error(e);\n                }\n            })();// eslint-disable-next-line\n        }, []);\n\n    const [paginaActual,setPaginaActual] = useState(1);\n    const postporPagina = 3;\n\n    const indiceUltimoPost = postporPagina * paginaActual;\n    const indicePrimerPost = indiceUltimoPost - postporPagina;\n    const publicacionActual = registros.slice(indicePrimerPost,indiceUltimoPost)\n\n    const cambiarPagina = (e, pageInfo) => {\n        setPaginaActual(pageInfo.activePage);};\n    \n    \n\n    return (\n        <div>\n            <Item.Group divided>\n                <ListaRegistro registros={publicacionActual} />\n            </Item.Group>\n\n            <Pagination\n                defaultActivePage={1}\n                activePage={paginaActual}\n                firstItem={null}\n                lastItem={null}\n                pointing\n                secondary\n                totalPages={Number(registros.length/postporPagina)}\n                onPageChange={cambiarPagina}\n                />\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n    )\n}\n\nexport default RegistroCard\n\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);","import React, { useState, useContext } from 'react'\nimport { Button, Message, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaActualizarStock({ marca, modelo, stock, id, ruta, disponible }) {\n\n    const { productSelect, setProductSelect } = useContext(UserContext);\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n    const [stockBanderaCero, setStockBanderaCero] = useState(true)\n\n    const eliminar = (identificador) => {\n        const temp = productSelect;\n        productSelect.map((producto, index) => {\n            const { id } = producto\n            if (identificador === id) {\n                if (temp.length === 1) {\n                    temp.splice(index, index + 1);\n                } else {\n                    temp.splice(index, index);\n                }\n                setProductSelect(temp);\n            }\n            return 1;\n        })\n        setBanderaSelect(!banderaSelect)\n    }\n\n    const validacion = (evt, articulo, id, stockDisponible) => {\n\n\n        if (Number(evt) < 1) {\n            setStockBanderaCero(false);\n            return\n        }\n        setStockBanderaCero(true);\n        setBanderaSelect(!banderaSelect);\n        if (productSelect.length === 0) {\n            setProductSelect([{ id: id, marca: articulo, stock: stockDisponible, cantidad: evt, modelo: modelo, ruta: ruta, disponible: disponible }])\n        } else {\n            setProductSelect([...productSelect, { id: id, marca: articulo, stock: stockDisponible, cantidad: evt, modelo: modelo, ruta: ruta, disponible: disponible  }])\n        }\n    }\n    const inputRef = React.createRef();\n\n    return (\n        <Table.Row key={id}>\n            <Table.Cell textAlign=\"center\">{marca}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{stock}</Table.Cell>\n            <Table.Cell textAlign=\"center\">\n                {\n                    stockBanderaCero ? <div /> :\n                        <Message negative size=\"mini\">La cantidad debe ser mayor a 0 </Message>}\n                <input id={id} type=\"number\" name=\"hola\" defaultValue={0} ref={inputRef} ></input>\n            </Table.Cell>\n            <Table.Cell textAlign=\"center\" >\n                {banderaSelect ?\n                    <Button circular color=\"green\" icon='add' onClick={e => { validacion(inputRef.current.value, marca, id, stock); }} />\n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar(id); }} />\n                }\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nexport default ListaActualizarStock\n\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal,Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductActualizar'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, updateProductoStock, setRegistro } from '../../../firebase';\n\nfunction ActualizarStock() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    \n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n\n    const fileInputRef = React.createRef();\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n\n        if (productSelect.length >= 1) {\n            productSelect.map((productos) => {\n                let new_stock = Number(productos.stock) + Number(productos.cantidad) \n                let new_disponible = Number(productos.disponible) + Number(productos.cantidad)\n                console.log(new_disponible) \n                console.log(new_stock) \n                updateProductoStock(new_stock,new_disponible,productos.ruta)\n            })\n            var lista = []\n            productSelect.map((wea) => {\n                lista.push({marca: wea.marca , modelo: wea.modelo,cantidad: wea.cantidad,stock: wea.stock})\n            })\n            let temp_subir = { encargado: \"Administrador\", peticion: \"Actualizar stock\", archivo: \"archivo.qlio\", lista: lista, fecha: Date.now(), comentario: descripcion }\n\n            setRegistro(temp_subir, (resp) => {\n                if (resp) {\n                    window.location = '/registro'\n                }\n            })\n        } else {\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }    \n    }\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Actualizar Stock de Productos</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Producto  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Disponibles</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, modelo, codigo, key, disponible } = producto\n                                                            return (\n                                                                <Productselect key={index} marca={marca} modelo={modelo} stock={stock} id={codigo} ruta={key}  disponible={disponible} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver articulos actualizados</Button>} >\n                                        <Modal.Header>Elementos actualizados</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Producto</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Anterior</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Agregada</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Total</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { producto, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{producto}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{Number(stock)+Number(cantidad)}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                            {nameFile}\n                        </Grid.Column>\n\n                    </Grid>\n\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default ActualizarStock;","import React, { useState, /*useEffect*/ }  from 'react';\r\nimport { Button, Form, Grid, Input, TextArea, Card } from 'semantic-ui-react';\r\nimport { setProducto, setRegistro } from '../../../firebase';\r\n\r\n\r\nfunction DevolucionProducto() {\r\n\r\n    const [codigo, setCodigoUV] = useState('');\r\n    const [marca, setMarca] = useState('');\r\n    const [modelo, setModelo] = useState('');\r\n    const [stock, setStock] = useState('');\r\n    const [ubicacion, setUbicacion] = useState('');\r\n    const [detalle, setDetalle] = useState('');\r\n     const [file, setFile] = useState('');\r\n     const [nameFile, setNameFile] = useState('');\r\n    const handleSubmit = (evt) => {\r\n\r\n        if (codigo !== '' && marca !== '' && modelo !== '' && stock !== '' && ubicacion !== '') {\r\n\r\n            let productSelect = { codigo: Number(codigo), disponible: Number(stock), stock: Number(stock), marca: marca, modelo: modelo, ubicacion: ubicacion }\r\n            let productSelectLista = [{ codigo: Number(codigo), stock: Number(stock), marca: marca, modelo: modelo, ubicacion: ubicacion }]\r\n            \r\n            setProducto(productSelect, (resp) =>{\r\n                if (resp) {\r\n                    let temp_subir = { encargado: \"Administrador\", peticion: \"Nuevo producto\", archivo: \"archivo.qlio\", lista: productSelectLista, fecha: Date.now(), comentario: detalle }\r\n\r\n                    setRegistro(temp_subir, (resp) => {\r\n                        if (resp) {\r\n                            window.location = '/registro'\r\n                        }\r\n                    })\r\n                }else{\r\n                    console.log(\"error\")\r\n                }\r\n            })\r\n\r\n            \r\n        }else{\r\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\r\n        }\r\n      \r\n        \r\n    }\r\n    const fileInputRef = React.createRef();\r\n\r\n    const getFile = e => {\r\n        setFile(e.target.files[0])\r\n        setNameFile(e.target.files[0].name)\r\n    }\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Card.Content>\r\n                <Grid columns=\"three\">\r\n                    <Grid.Column>\r\n                        <Input type=\"number\" placeholder=\"Codigo\" fluid onChange={e => setCodigoUV(e.target.value)}></Input>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Input placeholder=\"Marca\" fluid onChange={e => setMarca(e.target.value)} ></Input>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Input placeholder=\"Modelo\" fluid onChange={e => setModelo(e.target.value)} ></Input>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Grid columns=\"three\">\r\n                    <Grid.Column>\r\n                        <Input type=\"number\" placeholder=\"Stock Total\" fluid onChange={e => setStock(e.target.value)}></Input>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Input placeholder=\"Ubicación\" fluid onChange={e => setUbicacion(e.target.value)} ></Input>\r\n                    </Grid.Column>\r\n                    <Grid.Column >\r\n                        <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\r\n                        <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\r\n                        {nameFile}\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Card.Content>\r\n            <Form>\r\n                <Card.Content extra>\r\n                    <TextArea name=\"detalle\" placeholder='Descripción del producto' onChange={e => setDetalle(e.target.value)}/>\r\n                    <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\r\n                        Agregar\r\n                        </Button>\r\n                </Card.Content>\r\n            </Form>\r\n\r\n\r\n        </Card>\r\n    );\r\n}\r\nexport default DevolucionProducto;","import React, { useState, useContext } from 'react'\nimport { Button, Message, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaDevolucion({ marca, modelo, stock, id, ruta , disponible}) {\n\n    const { productSelect, setProductSelect } = useContext(UserContext);\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n    const [stockBandera, setStockBandera] = useState(true)\n    const [stockBanderaCero, setStockBanderaCero] = useState(true)\n    const validacion = (evt, marca,modelo, id, stockDisponible) => {\n\n        if (Number(evt) > Number(stockDisponible)) {\n            setStockBanderaCero(true);\n            setStockBandera(false);\n            return\n        }\n        if (Number(evt) < 1) {\n            setStockBandera(true)\n            setStockBanderaCero(false);\n            return\n        }\n        setStockBanderaCero(true);\n        setStockBandera(true);\n        setBanderaSelect(!banderaSelect);\n        if (productSelect.length === 0) {\n            setProductSelect([{ id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt, ruta: ruta, disponible: disponible }])\n        } else {\n            setProductSelect([...productSelect, { id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt, ruta: ruta, disponible: disponible }])\n        }\n\n    }\n    const eliminar = (identificador) => {\n        const temp = productSelect;\n        productSelect.map((producto, index) => {\n            const { id } = producto\n            if (identificador === id) {\n                if (temp.length === 1) {\n                    temp.splice(index, index + 1);\n                } else {\n                    temp.splice(index, index);\n                }\n                setProductSelect(temp);\n            }\n            return 1;\n        })\n        setBanderaSelect(!banderaSelect)\n    }\n    const inputRef = React.createRef();\n\n\n    return (\n\n        <Table.Row key={id}>\n            <Table.Cell textAlign=\"center\">{marca}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{modelo}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{stock}</Table.Cell>\n            <Table.Cell textAlign=\"center\">\n                {stockBandera ? <div /> : <Message negative size=\"mini\">La cantidad es mayor a los articulos pendientes</Message>\n                }{\n                    stockBanderaCero ? <div /> :\n                        <Message negative size=\"mini\">La cantidad debe ser mayor a 0 </Message>}\n                <input id={id} type=\"number\" name=\"hola\" defaultValue={0} ref={inputRef} ></input>\n            </Table.Cell>\n            <Table.Cell textAlign=\"center\" >\n                {banderaSelect ?\n                    <Button circular color=\"green\" icon='add' onClick={e => { validacion(inputRef.current.value, marca,modelo, id, stock); }} />\n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar(id); }} />\n                }\n            </Table.Cell>\n        </Table.Row>\n    )\n}\nexport default ListaDevolucion\n\n","import React, { useState, useMemo, useEffect} from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card,Modal, Header,Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ListaProductoDevolucion'\nimport { UserContext } from '../UseContext';\nimport { getListaProducto, updateProducto, setRegistro } from '../../../firebase';\n\nfunction DevolucionProducto() {\n    const [productSelect, setProductSelect] = useState([]);\n\n    const [productos, setProductos] = useState([])\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect}), [productSelect, setProductSelect]);\n    const fileInputRef = React.createRef();\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const handleSubmit = (evt) => {\n        if (encargado !== \"\" && productSelect.length >= 1) {\n            productSelect.map((productos) => {\n                let disponible = Number(productos.disponible) + Number(productos.cantidad);\n                console.log(disponible)\n                console.log(productos.ruta)\n                updateProducto(productos.ruta, disponible)\n            })\n            var lista = []\n            productSelect.map((wea) => {\n                lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n            })\n\n            let temp_subir = { encargado: encargado, peticion: \"Devolucion de producto\", archivo: \"archivo.qlio\", lista: lista, fecha: Date.now(), comentario: descripcion }\n            \n            setRegistro(temp_subir, (resp) => {\n                if (resp) {\n                    window.location = '/registro'\n                }\n            })\n        } else {\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }\n\n    }\n    const confirmarPedido = (evt) => {\n\n        if ( productSelect.length > 0  ) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n        <Card fluid>\n            <Card.Content>\n                <Grid columns=\"equal\">\n                    <Grid.Column>\n                        { isShowingModal ?\n                            < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                <Modal.Header>Devolucion Producto</Modal.Header>\n                                <Modal.Content >\n                                    <Modal.Description>\n                                        <Form>\n                                            <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Pendientes</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, modelo, codigo, disponible, key } = producto\n                                                            let dev_stock = Number(stock) - Number(disponible)\n                                                            return (\n                                                                <Productselect key={index} marca={marca} modelo={modelo} disponible={disponible} stock={dev_stock} id={codigo} ruta={key} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div/> }\n                                                <Button className=\"close\" onClick={e => {setIsclose(!isClose); setProductSelect([])}} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                        </Form>\n                                    </Modal.Description>\n                                </Modal.Content>\n                            </Modal >\n                        : \n                        <div style={{textAlign:\"center\"}} >\n                        \n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para devolver</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Articulos Pendientes:</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Entregada</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                {productSelect.map((item, index) => {\n                                                    const { marca, modelo, stock, cantidad } = item\n                                                    return (\n                                                        <Table.Row>\n                                                            <Table.Cell>{marca}</Table.Cell>\n                                                            <Table.Cell>{modelo}</Table.Cell>\n                                                            <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                            <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                        </Table.Row>\n                                                    )\n                                                })\n                                                }\n                                                 </Table.Body>\n                                                </Table>\n                                        </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                            <Button onClick={ e => {setIsShowingModal(!isShowingModal); setProductSelect([]); }}  color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                        </div>\n                    }\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Input fluid name=\"encargado\" placeholder=\"Encargado de Devolucion\" onChange={e => setEncargado(e.target.value)} />\n                    </Grid.Column>\n\n                    <Grid.Column width={1}>\n                        <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                        <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                        {nameFile}\n                    </Grid.Column>\n                </Grid>\n            </Card.Content>\n            <Form>\n                <Card.Content extra>\n                    <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                    <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                        Agregar\n                        </Button>\n                </Card.Content>\n            </Form>\n        </Card>\n        </UserContext.Provider>\n    );\n}\nexport default DevolucionProducto;","import React, { useState, useContext } from 'react'\nimport { Button, Message, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaProductoEntrega({ marca, modelo, stock, id, ubicacion, ruta, total }) {\n\n    const { productSelect, setProductSelect } = useContext(UserContext);\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n    const [stockBandera, setStockBandera] = useState(true)\n    const [stockBanderaCero, setStockBanderaCero] = useState(true)\n\n    const eliminar = (identificador) => {\n        const temp = productSelect;\n        productSelect.map((producto, index) => {\n            const { id } = producto\n            if (identificador === id) {\n                if (temp.length === 1) {\n                    temp.splice(index, index + 1);\n                } else {\n                    temp.splice(index, index);\n                }\n                setProductSelect(temp);\n            }\n            return 1;\n        })\n        setBanderaSelect(!banderaSelect)\n    }\n\n    const validacion = (evt, marca, modelo, id, stockDisponible) => {\n\n        if (Number(evt) > Number(stockDisponible)) {\n            setStockBanderaCero(true);\n            setStockBandera(false);\n            return\n        }\n        if (Number(evt) < 1) {\n            setStockBandera(true)\n            setStockBanderaCero(false);\n            return\n        }\n        setStockBanderaCero(true);\n        setStockBandera(true);\n        setBanderaSelect(!banderaSelect);\n        if (productSelect.length === 0) {\n            setProductSelect([{ id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt, total: total, ubicacion: ubicacion, ruta: ruta }])\n        } else {\n            setProductSelect([...productSelect, { id: id, marca: marca, modelo: modelo, stock: stockDisponible, cantidad: evt, total: total, ubicacion: ubicacion, ruta: ruta  }])\n        }\n\n    }\n    const inputRef = React.createRef();\n\n    return (\n        <Table.Row key={id}>\n            <Table.Cell textAlign=\"center\">{marca}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{modelo}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{stock}</Table.Cell>\n            <Table.Cell textAlign=\"center\">\n                {stockBandera ? <div /> : <Message negative size=\"mini\">La cantidad es mayor al stock</Message>\n                }{\n                    stockBanderaCero ? <div /> :\n                        <Message negative size=\"mini\">La cantidad debe ser mayor a 0 </Message>}\n                <input id={id} type=\"number\" name=\"hola\" defaultValue={0} ref={inputRef} ></input>\n            </Table.Cell>\n            <Table.Cell textAlign=\"center\" >\n                {banderaSelect ?\n                    <Button circular color=\"green\" icon='add' onClick={e => { validacion(inputRef.current.value, marca, modelo, id, stock); }} />\n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar(id); }} />\n                }\n            </Table.Cell>\n        </Table.Row>)\n}\n\nexport default ListaProductoEntrega\n\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, Input, TextArea, Card, Modal, Header, Table, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductSelect'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, setRegistro, updateProducto } from '../../../firebase';\n\nfunction EntregaProducto() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [encargado, setEncargado] = useState(\"\");\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n    const fileInputRef = React.createRef();\n\n\n        useEffect(() => {\n            (async function () {\n                try {\n                    getListaProducto((response) => {\n                        setProductos(response);\n                    });\n                } catch (e) {\n                    console.error(e);\n                }\n            })();// eslint-disable-next-line\n        }, []);\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n        if (encargado !== \"\" && productSelect.length >= 1) {\n            var temp_lista =\"\"\n            productSelect.map((productos) => {\n                temp_lista = temp_lista + `Marca: ${productos.marca} Modelo: ${productos.modelo} Cantidad: ${productos.cantidad}` + <br></br>;\n                let disponible = Number(productos.stock) - Number(productos.cantidad);\n                updateProducto( productos.ruta, disponible)\n            })\n\n            var lista = [];\n            productSelect.map((wea) => {\n                lista.push({ marca: wea.marca, modelo: wea.modelo, cantidad: wea.cantidad })\n            })\n\n            let temp_subir = { encargado: encargado, peticion: \"Entrega de producto\", archivo: \"archivo.qlio\", lista: lista, fecha: Date.now(), comentario: descripcion }\n                setRegistro(temp_subir, (resp) => {\n                    if (resp) {\n                        window.location = '/registro'\n                    }\n                })\n        }else{\n            alert(`Error en los datos, todos los datos son obligatorios y debe seleccionar productos obligatoriamente`)\n        }\n    }\n    \n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Entrega de Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca </Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo </Table.HeaderCell>\n                                                            <Table.HeaderCell>Articulos Disponibles</Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { disponible, marca, modelo, codigo, ubicacion, stock, key } = producto\n                                                            return (\n                                                                <Productselect key={index} ubicacion={ubicacion} total={stock} marca={marca} modelo={modelo} stock={disponible} id={codigo} ruta={key} ></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver Articulos</Button>} >\n                                        <Modal.Header>Elementos seleccionados para entrega</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Disponibilidad</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad Pedida</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { marca, modelo, stock, cantidad } = item\n                                                            return (\n                                                                <Table.Row>\n                                                                    <Table.Cell>{marca}</Table.Cell>\n                                                                    <Table.Cell>{modelo}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{cantidad}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Input fluid name=\"encargado\" placeholder=\"Encargado\" onChange={e => setEncargado(e.target.value)} />\n                        </Grid.Column>\n\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                            {nameFile}\n                        </Grid.Column>\n                    </Grid>\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EntregaProducto;","import React, { useState, useContext } from 'react'\nimport { Button, Table } from 'semantic-ui-react'\nimport { UserContext } from '../UseContext';\n\nfunction ListaEliminar({ marca, stock, id, modelo, ruta }) {\n\n    const { productSelect, setProductSelect } = useContext(UserContext);\n\n    const [banderaSelect, setBanderaSelect] = useState(true);\n\n    const eliminar = (identificador) => {\n        const temp = productSelect;\n        productSelect.map((producto, index) => {\n            const { id } = producto\n            if (identificador === id) {\n                if (temp.length === 1) {\n                    temp.splice(index, index + 1);\n                } else {\n                    temp.splice(index, index);\n                }\n                setProductSelect(temp);\n            }\n            return 1;\n        }\n        )\n        setBanderaSelect(!banderaSelect)\n    }\n\n    const validacion = ( articulo, id, stockDisponible) => {\n\n        setBanderaSelect(!banderaSelect);\n        if (productSelect.length === 0) {\n            setProductSelect([{ id: id, marca: articulo, modelo: modelo, stock: stockDisponible, ruta: ruta}])\n        } else {\n            setProductSelect([...productSelect, { id: id, marca: articulo, modelo: modelo, stock: stockDisponible, ruta: ruta}])\n        }\n    }\n\n    return (\n        <Table.Row key={id}>\n            <Table.Cell textAlign=\"center\">{marca}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{modelo}</Table.Cell>\n            <Table.Cell textAlign=\"center\">{stock}</Table.Cell>\n            <Table.Cell textAlign=\"center\" >\n                {banderaSelect ?\n                    <Button circular color=\"green\" icon='add' onClick={e => { validacion( marca, id, stock); }} />\n                    :\n                    <Button circular color=\"red\" icon='delete' onClick={e => { eliminar(id); }} />\n                }\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nexport default ListaEliminar\n\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Button, Form, Grid, TextArea, Card, Table, Modal, Header, Icon } from 'semantic-ui-react';\nimport Productselect from './ProductoEliminar'\nimport { UserContext } from \"../UseContext\";\nimport { getListaProducto, removeProducto, setRegistro } from '../../../firebase';\n\nfunction EliminarProducto() {\n\n    const [productSelect, setProductSelect] = useState([]);\n    const [productos, setProductos] = useState([])\n\n    const [isShowingModal, setIsShowingModal] = useState(true);\n    const [isClose, setIsclose] = useState(false);\n    const [descripcion, setDescripcion] = useState(\"\");\n    const [file, setFile] = useState('');\n    const [nameFile, setNameFile] = useState('');\n    const providerValue = useMemo(() => ({ productSelect, setProductSelect }), [productSelect, setProductSelect]);\n\n    useEffect(() => {\n        (async function () {\n            try {\n                getListaProducto((response) => {\n                    setProductos(response);\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        })();// eslint-disable-next-line\n    }, []);\n\n    const fileInputRef = React.createRef();\n\n    const getFile = e => {\n        setFile(e.target.files[0])\n        setNameFile(e.target.files[0].name)\n    }\n    const confirmarPedido = (evt) => {\n\n        if (productSelect.length > 0) {\n            setIsShowingModal(!isShowingModal);\n            setIsclose(!isClose);\n        }\n    }\n    const handleSubmit = (evt) => {\n\n        if (productSelect.length > 0) {\n            productSelect.map((productos) => {\n                console.log(productos.ruta)\n                removeProducto(productos.ruta)\n            })\n            var lista = [];\n            productSelect.map((wea) => {\n                lista.push({ marca: wea.marca, modelo: wea.modelo, stock: wea.stock })\n            })\n\n\n            let temp_subir = { encargado: \"Administrador\", peticion: \"Producto removido\", archivo: \"archivo.qlio\", lista: lista, fecha: Date.now(), comentario: descripcion }\n            setRegistro(temp_subir, (resp) => {\n                if (resp) {\n                    window.location = '/registro'\n                }\n            })\n        } else {\n            console.log(\"error\")\n        }\n    }\n\n    return (\n        <UserContext.Provider value={providerValue}>\n            <Card fluid>\n                <Card.Content>\n                    <Grid columns=\"equal\">\n                        <Grid.Column>\n                            {isShowingModal ?\n\n                                < Modal open={isClose} trigger={< Button onClick={e => setIsclose(!isClose)} fluid color=\"youtube\" > Lista de Productos</Button >} size=\"small\" >\n                                    <Modal.Header>Seleccionar Producto</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <Form>\n                                                <Header>Lista de Productos</Header>\n                                                <Table celled>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell>Marca  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Modelo  </Table.HeaderCell>\n                                                            <Table.HeaderCell>Cantidad</Table.HeaderCell>\n                                                            <Table.HeaderCell>Seleccionar</Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productos.map((producto, index) => {\n                                                            const { stock, marca, codigo, modelo, key } = producto\n                                                            return (\n                                                                <Productselect key={index} marca={marca} stock={stock} id={codigo} modelo={modelo} ruta={key}></Productselect>\n                                                            )\n                                                        })}\n                                                    </Table.Body>\n                                                </Table>\n                                                {productSelect.length > 0 ? <Button className=\"close\" onClick={e => confirmarPedido()} color=\"vk\" circular type=\"submit\" >\n                                                    Confirmar <Icon name='chevron right' /></Button> : <div />}\n                                                <Button className=\"close\" onClick={e => { setIsclose(!isClose); setProductSelect([]) }} color=\"red\" circular type=\"submit\" >\n                                                    Salir </Button>\n                                            </Form>\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal >\n                                :\n                                <div style={{ textAlign: \"center\" }} >\n                                    <Modal trigger={<Button circular color=\"blue\" attached='left'>Ver articulos actualizados</Button>} >\n                                        <Modal.Header>Elementos Seleccionados</Modal.Header>\n                                        <Modal.Content scrolling>\n                                            <Modal.Description>\n                                                <Table singleLine>\n                                                    <Table.Header>\n                                                        <Table.Row>\n                                                            <Table.HeaderCell >Marca</Table.HeaderCell>\n                                                            <Table.HeaderCell >Modelo</Table.HeaderCell>\n                                                            <Table.HeaderCell textAlign='center'>Cantidad </Table.HeaderCell>\n                                                        </Table.Row>\n                                                    </Table.Header>\n                                                    <Table.Body>\n                                                        {productSelect.map((item, index) => {\n                                                            const { marca, modelo, stock } = item\n                                                            return (\n                                                                <Table.Row key={index}>\n                                                                    <Table.Cell>{marca}</Table.Cell>\n                                                                    <Table.Cell>{modelo}</Table.Cell>\n                                                                    <Table.Cell textAlign='center' >{stock}</Table.Cell>\n                                                                </Table.Row>\n                                                            )\n                                                        })\n                                                        }\n                                                    </Table.Body>\n                                                </Table>\n                                            </Modal.Description>\n                                        </Modal.Content>\n                                    </Modal>\n                                    <Button onClick={e => { setIsShowingModal(!isShowingModal); setProductSelect([]); }} color=\"red\" circular attached='right'>Eliminar Articulos</Button>\n                                </div>\n                            }\n                        </Grid.Column>\n\n                        <Grid.Column width={1}>\n                            <Button icon=\"upload\" onClick={() => fileInputRef.current.click()} />\n                            <input ref={fileInputRef} type=\"file\" hidden onChange={getFile} />\n                            {nameFile}\n                        </Grid.Column>\n\n                    </Grid>\n\n                </Card.Content>\n                <Form>\n                    <Card.Content extra>\n                        <TextArea name=\"detalle\" placeholder='Detalle de la Devolucion' onChange={e => setDescripcion(e.target.value)} />\n                        <Button color=\"facebook\" type=\"submit\" size=\"medium\" onClick={handleSubmit} >\n                            Agregar\n                        </Button>\n                    </Card.Content>\n                </Form>\n            </Card>\n        </UserContext.Provider>\n    );\n}\nexport default EliminarProducto;","import React, { useState } from 'react';\nimport { Grid, Button, Label } from 'semantic-ui-react'\nimport Actualizar from './opciones/actualizar/ActualizaStock'\nimport Agregar from './opciones/agregar/AgregarProducto'\nimport Devolucion from './opciones/devolucion/DevolucionProducto'\nimport Entrega from './opciones/entrega/EntregaProducto'\nimport Eliminar from './opciones/eliminar/EliminarProducto'\n\n\nfunction Crum() {\n\n    const [isEntrega, setEntrega] = useState(false);\n    const [isDevolucion, setIsDevolucion] = useState(false);\n    const [isActualizar, setIsActualizar] = useState(false);\n    const [isAgregar, setIsAgregar] = useState(false);\n    const [isEliminar, setIsEliminar] = useState(false);\n    const [eleccion, setEleccion] = useState(true);\n\n    return (\n        <div>\n            {eleccion && window.localStorage.getItem('permisos_inventarioUV') === '0' &&\n                <Grid centered columns=\"equal\">\n                    <Button onClick={e => { setEleccion(!eleccion); setEntrega(!isEntrega) }} >Entrega de productos</Button>\n                    <Button onClick={e => { setEleccion(!eleccion); setIsDevolucion(!isDevolucion) }} >Devolución de productos</Button>\n                    <Button onClick={e => { setEleccion(!eleccion); setIsActualizar(!isActualizar) }} >Actualizar Stock</Button>\n                    <Button onClick={e => { setEleccion(!eleccion); setIsAgregar(!isAgregar) }} >Agregar nuevo producto</Button>\n                    <Button onClick={e => { setEleccion(!eleccion); setIsEliminar(!isEliminar) }} >Eliminar Producto</Button>\n                </Grid>\n            }\n            {eleccion && window.localStorage.getItem('permisos_inventarioUV') === '1' &&\n                <Grid centered columns=\"equal\">\n                    <Button onClick={e => { setEleccion(!eleccion); setEntrega(!isEntrega) }} >Entrega de productos</Button>\n                    <Button onClick={e => { setEleccion(!eleccion); setIsDevolucion(!isDevolucion) }} >Devolución de productos</Button>\n                </Grid>\n            }\n            {isEntrega && <div>\n                <Label as='a' color='red' ribbon  >\n                    Entrega productos\n                        </Label>\n                <Button icon=\"arrow left\" onClick={e => { setEleccion(!eleccion); setEntrega(!isEntrega); }} />\n                <br></br>\n                <Entrega />\n            </div>}\n            {isDevolucion && <div>\n                <Label as='a' color='red' ribbon>\n                    Devolución productos\n                        </Label>\n                <Button icon=\"arrow left\" onClick={e => { setEleccion(!eleccion); setIsDevolucion(!isDevolucion); }} >\n                </Button><br></br>\n                <Devolucion />\n            </div>}\n            {isActualizar && <div>\n                <Label as='a' color='red' ribbon>\n                    Actualizar Stock\n                        </Label>\n                <Button icon=\"arrow left\" onClick={e => { setEleccion(!eleccion); setIsActualizar(!isActualizar); }} >\n                </Button><br></br>\n                <Actualizar />\n            </div>}\n            {isAgregar && <div>\n                <Label as='a' color='red' ribbon>\n                    Agregar producto\n                        </Label>\n                <Button icon=\"arrow left\" onClick={e => { setEleccion(!eleccion); setIsAgregar(!isAgregar); }} >\n                </Button><br></br>\n                <Agregar />\n            </div>}\n            {isEliminar && <div>\n                <Label as='a' color='red' ribbon>\n                    Eliminar producto\n                        </Label>\n                <Button icon=\"arrow left\" onClick={e => { setEleccion(!eleccion); setIsEliminar(!isEliminar); }} >\n                </Button><br></br>\n                <Eliminar />\n            </div>}\n\n        </div>\n    );\n}\n\nexport default Crum;","import React, { Fragment } from 'react';\n//import { Link } from 'react-router-dom'\nimport { Container, Header, Button, Modal, Responsive } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader'\nimport CardRegistro from \"./Registro_divide\";\nimport SubirRegistro from \"./SubirRegistro\";\n\nimport './Registro.css'\nfunction Registro() {\n\n    return (\n        <div>\n            <Responsive>\n                <Fragment>\n                    <Container>\n                        <Menu />\n                        <Headertop />\n                        <div className=\"nombreActividad\">\n                            <div>\n                                <Header size=\"large\" > Regitro de Actividad </Header>\n                                <br></br>\n                                <Modal trigger={<Button color=\"instagram\" >Agregar Nuevo Registro</Button>} size=\"large\" >\n                                    <Modal.Header>Nuevo Registro</Modal.Header>\n                                    <Modal.Content >\n                                        <Modal.Description>\n                                            <SubirRegistro />\n                                        </Modal.Description>\n                                    </Modal.Content>\n                                </Modal>\n                                <br></br>\n                                <br></br>\n\n                                <div className=\"cardRegistro\">\n                                    <CardRegistro />\n                                </div>\n                            </div>\n                        </div>\n                    </Container>\n                </Fragment>\n            </Responsive>\n        </div>\n    );\n}\nexport default Registro;","import React from 'react'\nimport { Table, Header } from 'semantic-ui-react'\n\nfunction ListarTabla({ productos }) {\n    return (\n        <div>\n            <Table singleLine>\n                <Table.Header  >\n                    <Table.Row >\n                        <Table.HeaderCell >\n                            <Header as='h3'>Código</Header>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                            <Header as='h3'>Marca</Header>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                            <Header as='h3'>Modelo</Header>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                            <Header as='h3'>Stock</Header>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                            <Header as='h3'>Disponibles <br></br> Actualmente</Header>\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                            <Header as='h3'>Ubicación</Header>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body >\n                    {\n                        productos.map((data, index) => {\n                            return (\n                                <Table.Row key={index}>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.codigo}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.marca}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.modelo}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.stock}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.disponible}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign=\"center\">\n                                        <Header as='h4'>\n                                            {data.ubicacion}\n                                        </Header>\n                                    </Table.Cell>\n                                </Table.Row>\n                            )\n                        })\n                    }\n                </Table.Body>\n            </Table>\n        </div>\n    )\n}\n\nexport default ListarTabla\n","import React, { useEffect, useState } from 'react'\r\nimport MenuFablab from '../componentes/Menu'\r\nimport PagHeader from '../componentes/pagHeader'\r\nimport { getListaProducto } from '../firebase'\r\nimport { Container, Header, Pagination } from 'semantic-ui-react'\r\nimport ListarTabla from './ListarTabla'\r\n\r\n\r\nfunction Productos() {\r\n\r\n  const [productos, setProductos] = useState([])\r\n\r\n  const [paginaActual, setPaginaActual] = useState(1);\r\n  const postporPagina = 10;\r\n\r\n  const indiceUltimoPost = postporPagina * paginaActual;\r\n  const indicePrimerPost = indiceUltimoPost - postporPagina;\r\n  const publicacionActual = productos.slice(indicePrimerPost, indiceUltimoPost)\r\n\r\n  const cambiarPagina = (e, pageInfo) => {\r\n    setPaginaActual(pageInfo.activePage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        getListaProducto((response) => {\r\n          setProductos(response);\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();// eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <MenuFablab></MenuFablab>\r\n      <Container>\r\n        <PagHeader></PagHeader>\r\n        <Header size=\"large\"> Lista de productos</Header>\r\n        <ListarTabla productos={publicacionActual}></ListarTabla>\r\n        <Pagination\r\n          defaultActivePage={1}\r\n          activePage={paginaActual}\r\n          firstItem={null}\r\n          lastItem={null}\r\n          pointing\r\n          secondary\r\n          totalPages={productos.length / postporPagina}\r\n          onPageChange={cambiarPagina}\r\n        />\r\n      </Container>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Productos\r\n","import React, { Fragment } from 'react';\n//import { Link } from 'react-router-dom'\nimport { Container, Header } from 'semantic-ui-react';\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader'\n\n\n\nfunction home() {\n    return (\n        <div>\n            <Fragment>\n                <Menu />\n                <Container>\n                    <Headertop />\n                    <div className=\"nombreActividad\">\n                        <div>\n                            <Header size=\"large\" > Home </Header>\n                        </div>\n                    </div>\n                </Container>\n            </Fragment>\n        </div>\n    );\n}\nexport default home;","import React, { Fragment } from 'react';\n//import { Link } from 'react-router-dom'\nimport { Container, Header } from 'semantic-ui-react';\n\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader'\n\n\n\nfunction datos() {\n    return (\n        <div>\n            <Fragment>\n                <Menu />\n                <Container>\n                    <Headertop />\n                    <div className=\"nombreActividad\">\n                        <div>\n                            <Header size=\"large\" > Datos Predictivos</Header>\n                        </div>\n                    </div>\n                </Container>\n            </Fragment>\n        </div>\n    );\n}\nexport default datos;","export default [\n    {\n        \"country\": \"AD\",\n        \"hot dog\": 187,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 33,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 130,\n        \"sandwichColor\": \"hsl(288, 70%, 50%)\",\n        \"kebab\": 166,\n        \"kebabColor\": \"hsl(44, 70%, 50%)\",\n        \"fries\": 22,\n        \"friesColor\": \"hsl(318, 70%, 50%)\",\n        \"donut\": 39,\n        \"donutColor\": \"hsl(68, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AE\",\n        \"hot dog\": 12,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 79,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 56,\n        \"sandwichColor\": \"hsl(252, 70%, 50%)\",\n        \"kebab\": 19,\n        \"kebabColor\": \"hsl(52, 70%, 50%)\",\n        \"fries\": 186,\n        \"friesColor\": \"hsl(144, 70%, 50%)\",\n        \"donut\": 152,\n        \"donutColor\": \"hsl(278, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AF\",\n        \"hot dog\": 93,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 16,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 8,\n        \"sandwichColor\": \"hsl(175, 70%, 50%)\",\n        \"kebab\": 168,\n        \"kebabColor\": \"hsl(276, 70%, 50%)\",\n        \"fries\": 3,\n        \"friesColor\": \"hsl(304, 70%, 50%)\",\n        \"donut\": 47,\n        \"donutColor\": \"hsl(88, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AG\",\n        \"hot dog\": 180,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 136,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 148,\n        \"sandwichColor\": \"hsl(263, 70%, 50%)\",\n        \"kebab\": 36,\n        \"kebabColor\": \"hsl(344, 70%, 50%)\",\n        \"fries\": 168,\n        \"friesColor\": \"hsl(358, 70%, 50%)\",\n        \"donut\": 97,\n        \"donutColor\": \"hsl(323, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AI\",\n        \"hot dog\": 135,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 67,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 111,\n        \"sandwichColor\": \"hsl(116, 70%, 50%)\",\n        \"kebab\": 183,\n        \"kebabColor\": \"hsl(28, 70%, 50%)\",\n        \"fries\": 11,\n        \"friesColor\": \"hsl(348, 70%, 50%)\",\n        \"donut\": 200,\n        \"donutColor\": \"hsl(128, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AL\",\n        \"hot dog\": 49,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 70,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 75,\n        \"sandwichColor\": \"hsl(320, 70%, 50%)\",\n        \"kebab\": 165,\n        \"kebabColor\": \"hsl(266, 70%, 50%)\",\n        \"fries\": 134,\n        \"friesColor\": \"hsl(240, 70%, 50%)\",\n        \"donut\": 103,\n        \"donutColor\": \"hsl(231, 70%, 50%)\"\n      },\n      {\n        \"country\": \"AM\",\n        \"hot dog\": 182,\n        \"hot dogColor\": \"hsl(0, 100%, 50%)\",\n        \"burger\": 17,\n        \"burgerColor\": \"hsl(125, 100%, 50%)\",\n        \"sandwich\": 73,\n        \"sandwichColor\": \"hsl(205, 70%, 50%)\",\n        \"kebab\": 41,\n        \"kebabColor\": \"hsl(26, 70%, 50%)\",\n        \"fries\": 92,\n        \"friesColor\": \"hsl(330, 70%, 50%)\",\n        \"donut\": 199,\n        \"donutColor\": \"hsl(175, 70%, 50%)\"\n      }\n]","export default {\n    keys: [\n        'hot dog',\n        'burger',\n        'sandwich',\n        'kebab',\n        'fries',\n        'donut'\n    ],\n    margin: {\n        top: 50,\n        right: 130,\n        bottom: 50,\n        left: 60\n    },\n    defs: [\n        {\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 10,\n            padding: 1,\n            stagger: true\n        },\n        {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10\n        }\n    ],\n    fill: [\n        {\n            match: {\n                id: 'fries'\n            },\n            id: 'dots'\n        },\n        {\n            match: {\n                id: 'sandwich'\n            },\n            id: 'lines'\n        }\n    ],\n    axisBottom: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'food',\n        legendPosition: 'middle',\n        legendOffset: -40\n    },\n    axisLeft: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'food',\n        legendPosition: 'middle',\n        legendOffset: -40\n    },\n    legends: [\n        {\n            dataFrom: 'keys',\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.85,\n            symbolSize: 20,\n            effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n        }\n    ]\n}","import React, {Component} from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\n\nimport data from './DataBar'\nimport config from './ConfigBar'\n\nimport '../Chart.css'\n\nexport default class Bar extends Component {\n\n    render() {\n        return (\n            <div class=\"chart\" >            \n                <ResponsiveBar\n                    data={data}\n                    keys={config.keys}\n                    indexBy=\"country\"\n                    margin={config.margin}\n                    padding={0.3}\n                    groupMode=\"grouped\"\n                    colors={['Crimson',\n                    '#ffae00',\n                    'Crimson',\n                    '#0066ff',\n                    '#9000ff',\n                    '#FFCA28']}\n                    colorBy=\"id\"\n                    defs={config.defs}\n                    fill={config.fill}\n                    borderWidth={2}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', '1.6' ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={config.axisBottom}\n                    axisLeft={config.axisLeft}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    legends={config.legends}\n                    animate={true}\n                    onMouseOver={() => this.props.onMouseOverCallback()}\n                    onMouseOut={() => this.props.onMouseOutCallback(null)}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n            </div>\n        )\n    }\n}\n","export default [\n    {\n        \"id\": \"japan\",\n        \"color\": \"hsl(352, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 229\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 127\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 170\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 238\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 88\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 241\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 206\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 77\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 191\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 88\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 82\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 160\n          }\n        ]\n      },\n      {\n        \"id\": \"france\",\n        \"color\": \"hsl(194, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 57\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 3\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 34\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 155\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 184\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 77\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 97\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 109\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 11\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 223\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 105\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 116\n          }\n        ]\n      },\n      {\n        \"id\": \"us\",\n        \"color\": \"hsl(218, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 111\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 295\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 272\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 0\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 225\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 112\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 118\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 205\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 229\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 120\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 195\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 43\n          }\n        ]\n      },\n      {\n        \"id\": \"germany\",\n        \"color\": \"hsl(211, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 176\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 237\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 42\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 236\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 215\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 89\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 271\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 282\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 116\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 65\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 65\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 276\n          }\n        ]\n      },\n      {\n        \"id\": \"norway\",\n        \"color\": \"hsl(286, 70%, 50%)\",\n        \"data\": [\n          {\n            \"x\": \"plane\",\n            \"y\": 102\n          },\n          {\n            \"x\": \"helicopter\",\n            \"y\": 245\n          },\n          {\n            \"x\": \"boat\",\n            \"y\": 289\n          },\n          {\n            \"x\": \"train\",\n            \"y\": 83\n          },\n          {\n            \"x\": \"subway\",\n            \"y\": 41\n          },\n          {\n            \"x\": \"bus\",\n            \"y\": 51\n          },\n          {\n            \"x\": \"car\",\n            \"y\": 252\n          },\n          {\n            \"x\": \"moto\",\n            \"y\": 181\n          },\n          {\n            \"x\": \"bicycle\",\n            \"y\": 93\n          },\n          {\n            \"x\": \"horse\",\n            \"y\": 182\n          },\n          {\n            \"x\": \"skateboard\",\n            \"y\": 38\n          },\n          {\n            \"x\": \"others\",\n            \"y\": 209\n          }\n        ]\n      }\n]","export default {\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n    },\n    axisBottom: {\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle'\n    },\n    axisLeft: {\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle'\n    },\n    legends: [\n        {\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 117,\n            translateY: 14,\n            itemWidth: 100,\n            itemHeight: 26,\n            itemsSpacing: 10,\n            symbolSize: 22,\n            symbolShape: 'circle',\n            itemDirection: 'left-to-right',\n            itemTextColor: '#777',\n            effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n        }\n    ]\n}","import React, {Component} from 'react'\nimport { ResponsiveLine } from '@nivo/line'\n\n\nimport data from './DataLine'\nimport config from './ConfigLine'\n\nimport '../Chart.css'\n\nclass Grafico extends Component {\n\n    render() {\n        return (\n            <div class=\"chart\" >            \n                <ResponsiveLine\n                    data={data}\n                    margin={config.margin}\n                    xScale={{ type: 'point' }}\n                    yScale={{ type: 'linear', stacked: true, min: 'auto', max: 'auto' }}\n                    curve=\"monotoneX\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={config.axisBottom}\n                    axisLeft={config.axisLeft}\n                    colors={{ scheme: 'category10' }}\n                    pointSize={10}\n                    pointColor={{ theme: 'background' }}\n                    pointBorderWidth={2}\n                    pointBorderColor={{ from: 'serieColor', modifiers: [] }}\n                    pointLabel=\"y\"\n                    pointLabelYOffset={-12}\n                    areaOpacity={0}\n                    enableSlices=\"x\"\n                    useMesh={true}\n                    legends={config.legends}\n                    animate={true}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Grafico","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nimport '../Chart.css'\nfunction Grafico() {\n\n        return (\n            <div  >            \n                <ResponsivePie\n                    data={[\n                        {\n                            \"id\": \"css\",\n                            \"label\": \"css\",\n                            \"value\": 302,\n                            \"color\": \"hsl(235, 70%, 50%)\"\n                        },\n                        {\n                            \"id\": \"java\",\n                            \"label\": \"java\",\n                            \"value\": 223,\n                            \"color\": \"hsl(242, 70%, 50%)\"\n                        },\n                        {\n                            \"id\": \"scala\",\n                            \"label\": \"scala\",\n                            \"value\": 225,\n                            \"color\": \"hsl(209, 70%, 50%)\"\n                        },\n                        {\n                            \"id\": \"python\",\n                            \"label\": \"python\",\n                            \"value\": 528,\n                            \"color\": \"hsl(70, 70%, 50%)\"\n                        },\n                        {\n                            \"id\": \"haskell\",\n                            \"label\": \"haskell\",\n                            \"value\": 544,\n                            \"color\": \"hsl(7, 70%, 50%)\"\n                        }\n                    ]}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    colors={{ scheme: 'category10' }}\n                    borderWidth={1}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                    radialLabelsSkipAngle={10}\n                    radialLabelsTextXOffset={6}\n                    radialLabelsTextColor=\"#333333\"\n                    radialLabelsLinkOffset={0}\n                    radialLabelsLinkDiagonalLength={16}\n                    radialLabelsLinkHorizontalLength={24}\n                    radialLabelsLinkStrokeWidth={1}\n                    radialLabelsLinkColor={{ from: 'color' }}\n                    slicesLabelsSkipAngle={10}\n                    slicesLabelsTextColor=\"#333333\"\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                \n                    \n                />\n            </div>\n        )\n    }\n\nexport default Grafico","import React from 'react'\nimport { Tab } from 'semantic-ui-react'\n\nimport GraficoBar from \"../Barras/Bar\";\nimport GraficoLine from \"../Lines/Line\";\nimport GraficoPie from \"../Pies/Pie\";\n\nconst panes = [\n  {\n    menuItem: 'Tab 1',\n    render: () => <Tab.Pane attached={false}> <GraficoBar/> </Tab.Pane>,\n  },\n  {\n    menuItem: 'Tab 2',\n    render: () => <Tab.Pane attached={false}> <GraficoLine/> </Tab.Pane>,\n  },\n  {\n    menuItem: 'Tab 3',\n    render: () => <Tab.Pane attached={false}> <GraficoPie/> </Tab.Pane>,\n  },\n]\n\nconst TabTest = () => <Tab menu={{ pointing: true }} panes={panes} />\n\nexport default TabTest","import React, { Fragment, Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react'\nimport Menu from '../componentes/Menu'\nimport Headertop from '../componentes/pagHeader';\n\nimport Tab from \"./Tab/Tab\";\n\nimport './Style.css'\n\nexport default class Grafico extends Component {\n\n    render() {\n        return (\n            <div>\n            <Fragment>\n                <Menu/>\n                <Container>\n                    <Headertop/>\n                    <div className=\"MargenTitulo\">\n                        <div>\n                            <Header size=\"large\" > JUAN Y LA MAQUINA DEL TIEMPO </Header>\n                            <div className=\"MargenGrafico\">\n                                <Tab/>\n                            </div>\n                        </div>\n                    </div>\n                </Container>\n            </Fragment>\n        </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        window.localStorage.getItem('token_inventarioUV')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst SelectRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        window.localStorage.getItem('token_inventarioUV')\n            ? <Redirect to={{ pathname: '/home', state: { from: props.location } }}/>\n            : <Component {...props} />\n    )} />\n)\nexport default SelectRoute;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Error404() {\n    return (\n        <div>\n            <h2>The page you are looking for does not exist!</h2>\n            <h3>Would you like to return <Link to=\"/\">home</Link> instead?</h3>\n        </div>\n    );\n}\n\nexport default Error404;","import React from 'react';\nimport Login from './login/Login.jsx';\nimport './App.css';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport Registro from './registro/Registro.jsx';\nimport Productos from './productos/Productos.jsx';\nimport Home from './home/Home.jsx';\nimport Datos from './datos_predictivos/Datos.jsx'\nimport Graficos from './graficos/Grafico.jsx'\nimport PrivateRoute from './componentes/PrivateRoute.jsx'\nimport SelectRoute from './componentes/SelectRoute.jsx'\nimport Error404 from './componentes/Error404.jsx';\nfunction App() {\n\n  return (\n\n    <Router>\n      {window.localStorage.getItem('permisos_inventarioUV') === '0' &&\n        <Switch>\n          <PrivateRoute path=\"/registro\" exact component={Registro} />\n          <PrivateRoute path=\"/home\" exact component={Home} />\n          <PrivateRoute path=\"/graficos\" exact component={Graficos} />\n          <PrivateRoute path=\"/datos\" exact component={Datos} />\n          <PrivateRoute path=\"/productos\" exact component={Productos} />\n          <PrivateRoute path=\"/\" exact component={Home} />\n          <SelectRoute path=\"/login\" exact component={Login} />\n          <PrivateRoute component={Error404} />\n\n        </Switch>\n      }\n      {window.localStorage.getItem('permisos_inventarioUV') === '1' &&\n        <Switch>\n          <PrivateRoute path=\"/registro\" exact component={Registro} />\n          <PrivateRoute path=\"/home\" exact component={Home} />\n          <PrivateRoute path=\"/productos\" exact component={Productos} />\n          <PrivateRoute path=\"/\" exact component={Home} />\n          <SelectRoute path=\"/login\" exact component={Login} />\n          <PrivateRoute component={Error404} />\n\n        </Switch>\n      }\n      {window.localStorage.getItem('permisos_inventarioUV') === '2' &&\n        <Switch>\n          <PrivateRoute path=\"/home\" exact component={Home} />\n          <PrivateRoute path=\"/productos\" exact component={Productos} />\n          <PrivateRoute path=\"/\" exact component={Home} />\n          <SelectRoute path=\"/login\" exact component={Login} />\n          <PrivateRoute component={Error404} />\n        </Switch>\n      }\n      \n      {!window.localStorage.getItem('permisos_inventarioUV') &&\n        <Switch>\n        <SelectRoute path=\"/login\" exact component={Login} />\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute component={Error404} />\n      </Switch>\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}